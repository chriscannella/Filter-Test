Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statementlist
Rule 1     statementlist -> statementlist statementblock
Rule 2     statementlist -> statementblock
Rule 3     statementblock -> { statementlist }
Rule 4     statementblock -> WHILE ( expression ) { statementblock }
Rule 5     statementblock -> FOR ( expression ; expression ; expression ) { statementblock }
Rule 6     statementblock -> FOR NAME IN expression { statementblock }
Rule 7     statementblock -> statement ;
Rule 8     statement -> FILTERON expression
Rule 9     statement -> expression
Rule 10    expression -> expression + expression
Rule 11    expression -> expression - expression
Rule 12    expression -> expression * expression
Rule 13    expression -> expression / expression
Rule 14    expression -> expression IN expression
Rule 15    expression -> expression EQ expression
Rule 16    expression -> expression NEQ expression
Rule 17    expression -> expression GEQ expression
Rule 18    expression -> expression LEQ expression
Rule 19    expression -> expression SG expression
Rule 20    expression -> expression SL expression
Rule 21    expression -> - expression
Rule 22    expression -> ( expression )
Rule 23    expression -> expression [ expression ]
Rule 24    expression -> BOOL
Rule 25    expression -> NUMBER
Rule 26    expression -> STRING
Rule 27    expression -> OBSERVATION
Rule 28    expression -> NAME ASSIGN expression
Rule 29    expression -> NAME
Rule 30    expression -> TEST

Terminals, with rules where they appear

(                    : 4 5 22
)                    : 4 5 22
*                    : 12
+                    : 10
-                    : 11 21
/                    : 13
;                    : 5 5 7
ASSIGN               : 28
BOOL                 : 24
EQ                   : 15
FILTERON             : 8
FOR                  : 5 6
GEQ                  : 17
IN                   : 6 14
LEQ                  : 18
NAME                 : 6 28 29
NEQ                  : 16
NUMBER               : 25
OBSERVATION          : 27
SG                   : 19
SL                   : 20
STRING               : 26
TEST                 : 30
WHILE                : 4
[                    : 23
]                    : 23
error                : 
{                    : 3 4 5 6
}                    : 3 4 5 6

Nonterminals, with rules where they appear

expression           : 4 5 5 5 6 8 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 22 23 23 28
statement            : 7
statementblock       : 1 2 4 5 6
statementlist        : 1 3 0

Parsing method: LALR

state 0

    (0) S' -> . statementlist
    (1) statementlist -> . statementlist statementblock
    (2) statementlist -> . statementblock
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (6) statementblock -> . FOR NAME IN expression { statementblock }
    (7) statementblock -> . statement ;
    (8) statement -> . FILTERON expression
    (9) statement -> . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    {               shift and go to state 15
    WHILE           shift and go to state 4
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    statementblock                 shift and go to state 10
    expression                     shift and go to state 16
    statement                      shift and go to state 7
    statementlist                  shift and go to state 3

state 1

    (8) statement -> FILTERON . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 17

state 2

    (25) expression -> NUMBER .

    +               reduce using rule 25 (expression -> NUMBER .)
    -               reduce using rule 25 (expression -> NUMBER .)
    *               reduce using rule 25 (expression -> NUMBER .)
    /               reduce using rule 25 (expression -> NUMBER .)
    IN              reduce using rule 25 (expression -> NUMBER .)
    EQ              reduce using rule 25 (expression -> NUMBER .)
    NEQ             reduce using rule 25 (expression -> NUMBER .)
    GEQ             reduce using rule 25 (expression -> NUMBER .)
    LEQ             reduce using rule 25 (expression -> NUMBER .)
    SG              reduce using rule 25 (expression -> NUMBER .)
    SL              reduce using rule 25 (expression -> NUMBER .)
    [               reduce using rule 25 (expression -> NUMBER .)
    ;               reduce using rule 25 (expression -> NUMBER .)
    )               reduce using rule 25 (expression -> NUMBER .)
    ]               reduce using rule 25 (expression -> NUMBER .)
    {               reduce using rule 25 (expression -> NUMBER .)


state 3

    (0) S' -> statementlist .
    (1) statementlist -> statementlist . statementblock
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (6) statementblock -> . FOR NAME IN expression { statementblock }
    (7) statementblock -> . statement ;
    (8) statement -> . FILTERON expression
    (9) statement -> . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    {               shift and go to state 15
    WHILE           shift and go to state 4
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    statementblock                 shift and go to state 18
    expression                     shift and go to state 16
    statement                      shift and go to state 7

state 4

    (4) statementblock -> WHILE . ( expression ) { statementblock }

    (               shift and go to state 19


state 5

    (22) expression -> ( . expression )
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 20

state 6

    (21) expression -> - . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 21

state 7

    (7) statementblock -> statement . ;

    ;               shift and go to state 22


state 8

    (26) expression -> STRING .

    +               reduce using rule 26 (expression -> STRING .)
    -               reduce using rule 26 (expression -> STRING .)
    *               reduce using rule 26 (expression -> STRING .)
    /               reduce using rule 26 (expression -> STRING .)
    IN              reduce using rule 26 (expression -> STRING .)
    EQ              reduce using rule 26 (expression -> STRING .)
    NEQ             reduce using rule 26 (expression -> STRING .)
    GEQ             reduce using rule 26 (expression -> STRING .)
    LEQ             reduce using rule 26 (expression -> STRING .)
    SG              reduce using rule 26 (expression -> STRING .)
    SL              reduce using rule 26 (expression -> STRING .)
    [               reduce using rule 26 (expression -> STRING .)
    ;               reduce using rule 26 (expression -> STRING .)
    )               reduce using rule 26 (expression -> STRING .)
    ]               reduce using rule 26 (expression -> STRING .)
    {               reduce using rule 26 (expression -> STRING .)


state 9

    (5) statementblock -> FOR . ( expression ; expression ; expression ) { statementblock }
    (6) statementblock -> FOR . NAME IN expression { statementblock }

    (               shift and go to state 24
    NAME            shift and go to state 23


state 10

    (2) statementlist -> statementblock .

    {               reduce using rule 2 (statementlist -> statementblock .)
    WHILE           reduce using rule 2 (statementlist -> statementblock .)
    FOR             reduce using rule 2 (statementlist -> statementblock .)
    FILTERON        reduce using rule 2 (statementlist -> statementblock .)
    -               reduce using rule 2 (statementlist -> statementblock .)
    (               reduce using rule 2 (statementlist -> statementblock .)
    BOOL            reduce using rule 2 (statementlist -> statementblock .)
    NUMBER          reduce using rule 2 (statementlist -> statementblock .)
    STRING          reduce using rule 2 (statementlist -> statementblock .)
    OBSERVATION     reduce using rule 2 (statementlist -> statementblock .)
    NAME            reduce using rule 2 (statementlist -> statementblock .)
    TEST            reduce using rule 2 (statementlist -> statementblock .)
    $end            reduce using rule 2 (statementlist -> statementblock .)
    }               reduce using rule 2 (statementlist -> statementblock .)


state 11

    (28) expression -> NAME . ASSIGN expression
    (29) expression -> NAME .

    ASSIGN          shift and go to state 25
    +               reduce using rule 29 (expression -> NAME .)
    -               reduce using rule 29 (expression -> NAME .)
    *               reduce using rule 29 (expression -> NAME .)
    /               reduce using rule 29 (expression -> NAME .)
    IN              reduce using rule 29 (expression -> NAME .)
    EQ              reduce using rule 29 (expression -> NAME .)
    NEQ             reduce using rule 29 (expression -> NAME .)
    GEQ             reduce using rule 29 (expression -> NAME .)
    LEQ             reduce using rule 29 (expression -> NAME .)
    SG              reduce using rule 29 (expression -> NAME .)
    SL              reduce using rule 29 (expression -> NAME .)
    [               reduce using rule 29 (expression -> NAME .)
    ;               reduce using rule 29 (expression -> NAME .)
    )               reduce using rule 29 (expression -> NAME .)
    ]               reduce using rule 29 (expression -> NAME .)
    {               reduce using rule 29 (expression -> NAME .)


state 12

    (27) expression -> OBSERVATION .

    +               reduce using rule 27 (expression -> OBSERVATION .)
    -               reduce using rule 27 (expression -> OBSERVATION .)
    *               reduce using rule 27 (expression -> OBSERVATION .)
    /               reduce using rule 27 (expression -> OBSERVATION .)
    IN              reduce using rule 27 (expression -> OBSERVATION .)
    EQ              reduce using rule 27 (expression -> OBSERVATION .)
    NEQ             reduce using rule 27 (expression -> OBSERVATION .)
    GEQ             reduce using rule 27 (expression -> OBSERVATION .)
    LEQ             reduce using rule 27 (expression -> OBSERVATION .)
    SG              reduce using rule 27 (expression -> OBSERVATION .)
    SL              reduce using rule 27 (expression -> OBSERVATION .)
    [               reduce using rule 27 (expression -> OBSERVATION .)
    ;               reduce using rule 27 (expression -> OBSERVATION .)
    )               reduce using rule 27 (expression -> OBSERVATION .)
    ]               reduce using rule 27 (expression -> OBSERVATION .)
    {               reduce using rule 27 (expression -> OBSERVATION .)


state 13

    (24) expression -> BOOL .

    +               reduce using rule 24 (expression -> BOOL .)
    -               reduce using rule 24 (expression -> BOOL .)
    *               reduce using rule 24 (expression -> BOOL .)
    /               reduce using rule 24 (expression -> BOOL .)
    IN              reduce using rule 24 (expression -> BOOL .)
    EQ              reduce using rule 24 (expression -> BOOL .)
    NEQ             reduce using rule 24 (expression -> BOOL .)
    GEQ             reduce using rule 24 (expression -> BOOL .)
    LEQ             reduce using rule 24 (expression -> BOOL .)
    SG              reduce using rule 24 (expression -> BOOL .)
    SL              reduce using rule 24 (expression -> BOOL .)
    [               reduce using rule 24 (expression -> BOOL .)
    ;               reduce using rule 24 (expression -> BOOL .)
    )               reduce using rule 24 (expression -> BOOL .)
    ]               reduce using rule 24 (expression -> BOOL .)
    {               reduce using rule 24 (expression -> BOOL .)


state 14

    (30) expression -> TEST .

    +               reduce using rule 30 (expression -> TEST .)
    -               reduce using rule 30 (expression -> TEST .)
    *               reduce using rule 30 (expression -> TEST .)
    /               reduce using rule 30 (expression -> TEST .)
    IN              reduce using rule 30 (expression -> TEST .)
    EQ              reduce using rule 30 (expression -> TEST .)
    NEQ             reduce using rule 30 (expression -> TEST .)
    GEQ             reduce using rule 30 (expression -> TEST .)
    LEQ             reduce using rule 30 (expression -> TEST .)
    SG              reduce using rule 30 (expression -> TEST .)
    SL              reduce using rule 30 (expression -> TEST .)
    [               reduce using rule 30 (expression -> TEST .)
    ;               reduce using rule 30 (expression -> TEST .)
    )               reduce using rule 30 (expression -> TEST .)
    ]               reduce using rule 30 (expression -> TEST .)
    {               reduce using rule 30 (expression -> TEST .)


state 15

    (3) statementblock -> { . statementlist }
    (1) statementlist -> . statementlist statementblock
    (2) statementlist -> . statementblock
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (6) statementblock -> . FOR NAME IN expression { statementblock }
    (7) statementblock -> . statement ;
    (8) statement -> . FILTERON expression
    (9) statement -> . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    {               shift and go to state 15
    WHILE           shift and go to state 4
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    statementblock                 shift and go to state 10
    expression                     shift and go to state 16
    statement                      shift and go to state 7
    statementlist                  shift and go to state 26

state 16

    (9) statement -> expression .
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

    ;               reduce using rule 9 (statement -> expression .)
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37


state 17

    (8) statement -> FILTERON expression .
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

    ;               reduce using rule 8 (statement -> FILTERON expression .)
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37


state 18

    (1) statementlist -> statementlist statementblock .

    {               reduce using rule 1 (statementlist -> statementlist statementblock .)
    WHILE           reduce using rule 1 (statementlist -> statementlist statementblock .)
    FOR             reduce using rule 1 (statementlist -> statementlist statementblock .)
    FILTERON        reduce using rule 1 (statementlist -> statementlist statementblock .)
    -               reduce using rule 1 (statementlist -> statementlist statementblock .)
    (               reduce using rule 1 (statementlist -> statementlist statementblock .)
    BOOL            reduce using rule 1 (statementlist -> statementlist statementblock .)
    NUMBER          reduce using rule 1 (statementlist -> statementlist statementblock .)
    STRING          reduce using rule 1 (statementlist -> statementlist statementblock .)
    OBSERVATION     reduce using rule 1 (statementlist -> statementlist statementblock .)
    NAME            reduce using rule 1 (statementlist -> statementlist statementblock .)
    TEST            reduce using rule 1 (statementlist -> statementlist statementblock .)
    $end            reduce using rule 1 (statementlist -> statementlist statementblock .)
    }               reduce using rule 1 (statementlist -> statementlist statementblock .)


state 19

    (4) statementblock -> WHILE ( . expression ) { statementblock }
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 39

state 20

    (22) expression -> ( expression . )
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

    )               shift and go to state 40
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37


state 21

    (21) expression -> - expression .
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

    +               reduce using rule 21 (expression -> - expression .)
    -               reduce using rule 21 (expression -> - expression .)
    *               reduce using rule 21 (expression -> - expression .)
    /               reduce using rule 21 (expression -> - expression .)
    IN              reduce using rule 21 (expression -> - expression .)
    EQ              reduce using rule 21 (expression -> - expression .)
    NEQ             reduce using rule 21 (expression -> - expression .)
    GEQ             reduce using rule 21 (expression -> - expression .)
    LEQ             reduce using rule 21 (expression -> - expression .)
    SG              reduce using rule 21 (expression -> - expression .)
    SL              reduce using rule 21 (expression -> - expression .)
    [               reduce using rule 21 (expression -> - expression .)
    ;               reduce using rule 21 (expression -> - expression .)
    )               reduce using rule 21 (expression -> - expression .)
    ]               reduce using rule 21 (expression -> - expression .)
    {               reduce using rule 21 (expression -> - expression .)

  ! +               [ shift and go to state 30 ]
  ! -               [ shift and go to state 32 ]
  ! *               [ shift and go to state 31 ]
  ! /               [ shift and go to state 33 ]
  ! IN              [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 29 ]
  ! NEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 27 ]
  ! LEQ             [ shift and go to state 34 ]
  ! SG              [ shift and go to state 36 ]
  ! SL              [ shift and go to state 28 ]
  ! [               [ shift and go to state 37 ]


state 22

    (7) statementblock -> statement ; .

    }               reduce using rule 7 (statementblock -> statement ; .)
    {               reduce using rule 7 (statementblock -> statement ; .)
    WHILE           reduce using rule 7 (statementblock -> statement ; .)
    FOR             reduce using rule 7 (statementblock -> statement ; .)
    FILTERON        reduce using rule 7 (statementblock -> statement ; .)
    -               reduce using rule 7 (statementblock -> statement ; .)
    (               reduce using rule 7 (statementblock -> statement ; .)
    BOOL            reduce using rule 7 (statementblock -> statement ; .)
    NUMBER          reduce using rule 7 (statementblock -> statement ; .)
    STRING          reduce using rule 7 (statementblock -> statement ; .)
    OBSERVATION     reduce using rule 7 (statementblock -> statement ; .)
    NAME            reduce using rule 7 (statementblock -> statement ; .)
    TEST            reduce using rule 7 (statementblock -> statement ; .)
    $end            reduce using rule 7 (statementblock -> statement ; .)


state 23

    (6) statementblock -> FOR NAME . IN expression { statementblock }

    IN              shift and go to state 41


state 24

    (5) statementblock -> FOR ( . expression ; expression ; expression ) { statementblock }
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 42

state 25

    (28) expression -> NAME ASSIGN . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 43

state 26

    (3) statementblock -> { statementlist . }
    (1) statementlist -> statementlist . statementblock
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (6) statementblock -> . FOR NAME IN expression { statementblock }
    (7) statementblock -> . statement ;
    (8) statement -> . FILTERON expression
    (9) statement -> . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    }               shift and go to state 44
    {               shift and go to state 15
    WHILE           shift and go to state 4
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    statementblock                 shift and go to state 18
    expression                     shift and go to state 16
    statement                      shift and go to state 7

state 27

    (17) expression -> expression GEQ . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 45

state 28

    (20) expression -> expression SL . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 46

state 29

    (15) expression -> expression EQ . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 47

state 30

    (10) expression -> expression + . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 48

state 31

    (12) expression -> expression * . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 49

state 32

    (11) expression -> expression - . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 50

state 33

    (13) expression -> expression / . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 51

state 34

    (18) expression -> expression LEQ . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 52

state 35

    (14) expression -> expression IN . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 53

state 36

    (19) expression -> expression SG . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 54

state 37

    (23) expression -> expression [ . expression ]
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 55

state 38

    (16) expression -> expression NEQ . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 56

state 39

    (4) statementblock -> WHILE ( expression . ) { statementblock }
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

    )               shift and go to state 57
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37


state 40

    (22) expression -> ( expression ) .

    +               reduce using rule 22 (expression -> ( expression ) .)
    -               reduce using rule 22 (expression -> ( expression ) .)
    *               reduce using rule 22 (expression -> ( expression ) .)
    /               reduce using rule 22 (expression -> ( expression ) .)
    IN              reduce using rule 22 (expression -> ( expression ) .)
    EQ              reduce using rule 22 (expression -> ( expression ) .)
    NEQ             reduce using rule 22 (expression -> ( expression ) .)
    GEQ             reduce using rule 22 (expression -> ( expression ) .)
    LEQ             reduce using rule 22 (expression -> ( expression ) .)
    SG              reduce using rule 22 (expression -> ( expression ) .)
    SL              reduce using rule 22 (expression -> ( expression ) .)
    [               reduce using rule 22 (expression -> ( expression ) .)
    ;               reduce using rule 22 (expression -> ( expression ) .)
    )               reduce using rule 22 (expression -> ( expression ) .)
    ]               reduce using rule 22 (expression -> ( expression ) .)
    {               reduce using rule 22 (expression -> ( expression ) .)


state 41

    (6) statementblock -> FOR NAME IN . expression { statementblock }
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 58

state 42

    (5) statementblock -> FOR ( expression . ; expression ; expression ) { statementblock }
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

    ;               shift and go to state 59
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37


state 43

    (28) expression -> NAME ASSIGN expression .
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 28 (expression -> NAME ASSIGN expression .)
    )               reduce using rule 28 (expression -> NAME ASSIGN expression .)
    ]               reduce using rule 28 (expression -> NAME ASSIGN expression .)
    {               reduce using rule 28 (expression -> NAME ASSIGN expression .)
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37

  ! +               [ reduce using rule 28 (expression -> NAME ASSIGN expression .) ]
  ! -               [ reduce using rule 28 (expression -> NAME ASSIGN expression .) ]
  ! *               [ reduce using rule 28 (expression -> NAME ASSIGN expression .) ]
  ! /               [ reduce using rule 28 (expression -> NAME ASSIGN expression .) ]
  ! IN              [ reduce using rule 28 (expression -> NAME ASSIGN expression .) ]
  ! EQ              [ reduce using rule 28 (expression -> NAME ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 28 (expression -> NAME ASSIGN expression .) ]
  ! GEQ             [ reduce using rule 28 (expression -> NAME ASSIGN expression .) ]
  ! LEQ             [ reduce using rule 28 (expression -> NAME ASSIGN expression .) ]
  ! SG              [ reduce using rule 28 (expression -> NAME ASSIGN expression .) ]
  ! SL              [ reduce using rule 28 (expression -> NAME ASSIGN expression .) ]
  ! [               [ reduce using rule 28 (expression -> NAME ASSIGN expression .) ]


state 44

    (3) statementblock -> { statementlist } .

    }               reduce using rule 3 (statementblock -> { statementlist } .)
    {               reduce using rule 3 (statementblock -> { statementlist } .)
    WHILE           reduce using rule 3 (statementblock -> { statementlist } .)
    FOR             reduce using rule 3 (statementblock -> { statementlist } .)
    FILTERON        reduce using rule 3 (statementblock -> { statementlist } .)
    -               reduce using rule 3 (statementblock -> { statementlist } .)
    (               reduce using rule 3 (statementblock -> { statementlist } .)
    BOOL            reduce using rule 3 (statementblock -> { statementlist } .)
    NUMBER          reduce using rule 3 (statementblock -> { statementlist } .)
    STRING          reduce using rule 3 (statementblock -> { statementlist } .)
    OBSERVATION     reduce using rule 3 (statementblock -> { statementlist } .)
    NAME            reduce using rule 3 (statementblock -> { statementlist } .)
    TEST            reduce using rule 3 (statementblock -> { statementlist } .)
    $end            reduce using rule 3 (statementblock -> { statementlist } .)


state 45

    (17) expression -> expression GEQ expression .
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 17 (expression -> expression GEQ expression .)
    )               reduce using rule 17 (expression -> expression GEQ expression .)
    ]               reduce using rule 17 (expression -> expression GEQ expression .)
    {               reduce using rule 17 (expression -> expression GEQ expression .)
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37

  ! +               [ reduce using rule 17 (expression -> expression GEQ expression .) ]
  ! -               [ reduce using rule 17 (expression -> expression GEQ expression .) ]
  ! *               [ reduce using rule 17 (expression -> expression GEQ expression .) ]
  ! /               [ reduce using rule 17 (expression -> expression GEQ expression .) ]
  ! IN              [ reduce using rule 17 (expression -> expression GEQ expression .) ]
  ! EQ              [ reduce using rule 17 (expression -> expression GEQ expression .) ]
  ! NEQ             [ reduce using rule 17 (expression -> expression GEQ expression .) ]
  ! GEQ             [ reduce using rule 17 (expression -> expression GEQ expression .) ]
  ! LEQ             [ reduce using rule 17 (expression -> expression GEQ expression .) ]
  ! SG              [ reduce using rule 17 (expression -> expression GEQ expression .) ]
  ! SL              [ reduce using rule 17 (expression -> expression GEQ expression .) ]
  ! [               [ reduce using rule 17 (expression -> expression GEQ expression .) ]


state 46

    (20) expression -> expression SL expression .
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 20 (expression -> expression SL expression .)
    )               reduce using rule 20 (expression -> expression SL expression .)
    ]               reduce using rule 20 (expression -> expression SL expression .)
    {               reduce using rule 20 (expression -> expression SL expression .)
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37

  ! +               [ reduce using rule 20 (expression -> expression SL expression .) ]
  ! -               [ reduce using rule 20 (expression -> expression SL expression .) ]
  ! *               [ reduce using rule 20 (expression -> expression SL expression .) ]
  ! /               [ reduce using rule 20 (expression -> expression SL expression .) ]
  ! IN              [ reduce using rule 20 (expression -> expression SL expression .) ]
  ! EQ              [ reduce using rule 20 (expression -> expression SL expression .) ]
  ! NEQ             [ reduce using rule 20 (expression -> expression SL expression .) ]
  ! GEQ             [ reduce using rule 20 (expression -> expression SL expression .) ]
  ! LEQ             [ reduce using rule 20 (expression -> expression SL expression .) ]
  ! SG              [ reduce using rule 20 (expression -> expression SL expression .) ]
  ! SL              [ reduce using rule 20 (expression -> expression SL expression .) ]
  ! [               [ reduce using rule 20 (expression -> expression SL expression .) ]


state 47

    (15) expression -> expression EQ expression .
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 15 (expression -> expression EQ expression .)
    )               reduce using rule 15 (expression -> expression EQ expression .)
    ]               reduce using rule 15 (expression -> expression EQ expression .)
    {               reduce using rule 15 (expression -> expression EQ expression .)
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37

  ! +               [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! -               [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! *               [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! /               [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! IN              [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! GEQ             [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! LEQ             [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! SG              [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! SL              [ reduce using rule 15 (expression -> expression EQ expression .) ]
  ! [               [ reduce using rule 15 (expression -> expression EQ expression .) ]


state 48

    (10) expression -> expression + expression .
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

    +               reduce using rule 10 (expression -> expression + expression .)
    -               reduce using rule 10 (expression -> expression + expression .)
    IN              reduce using rule 10 (expression -> expression + expression .)
    EQ              reduce using rule 10 (expression -> expression + expression .)
    NEQ             reduce using rule 10 (expression -> expression + expression .)
    GEQ             reduce using rule 10 (expression -> expression + expression .)
    LEQ             reduce using rule 10 (expression -> expression + expression .)
    SG              reduce using rule 10 (expression -> expression + expression .)
    SL              reduce using rule 10 (expression -> expression + expression .)
    [               reduce using rule 10 (expression -> expression + expression .)
    ;               reduce using rule 10 (expression -> expression + expression .)
    )               reduce using rule 10 (expression -> expression + expression .)
    ]               reduce using rule 10 (expression -> expression + expression .)
    {               reduce using rule 10 (expression -> expression + expression .)
    *               shift and go to state 31
    /               shift and go to state 33

  ! *               [ reduce using rule 10 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 10 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 30 ]
  ! -               [ shift and go to state 32 ]
  ! IN              [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 29 ]
  ! NEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 27 ]
  ! LEQ             [ shift and go to state 34 ]
  ! SG              [ shift and go to state 36 ]
  ! SL              [ shift and go to state 28 ]
  ! [               [ shift and go to state 37 ]


state 49

    (12) expression -> expression * expression .
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

    +               reduce using rule 12 (expression -> expression * expression .)
    -               reduce using rule 12 (expression -> expression * expression .)
    *               reduce using rule 12 (expression -> expression * expression .)
    /               reduce using rule 12 (expression -> expression * expression .)
    IN              reduce using rule 12 (expression -> expression * expression .)
    EQ              reduce using rule 12 (expression -> expression * expression .)
    NEQ             reduce using rule 12 (expression -> expression * expression .)
    GEQ             reduce using rule 12 (expression -> expression * expression .)
    LEQ             reduce using rule 12 (expression -> expression * expression .)
    SG              reduce using rule 12 (expression -> expression * expression .)
    SL              reduce using rule 12 (expression -> expression * expression .)
    [               reduce using rule 12 (expression -> expression * expression .)
    ;               reduce using rule 12 (expression -> expression * expression .)
    )               reduce using rule 12 (expression -> expression * expression .)
    ]               reduce using rule 12 (expression -> expression * expression .)
    {               reduce using rule 12 (expression -> expression * expression .)

  ! +               [ shift and go to state 30 ]
  ! -               [ shift and go to state 32 ]
  ! *               [ shift and go to state 31 ]
  ! /               [ shift and go to state 33 ]
  ! IN              [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 29 ]
  ! NEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 27 ]
  ! LEQ             [ shift and go to state 34 ]
  ! SG              [ shift and go to state 36 ]
  ! SL              [ shift and go to state 28 ]
  ! [               [ shift and go to state 37 ]


state 50

    (11) expression -> expression - expression .
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

    +               reduce using rule 11 (expression -> expression - expression .)
    -               reduce using rule 11 (expression -> expression - expression .)
    IN              reduce using rule 11 (expression -> expression - expression .)
    EQ              reduce using rule 11 (expression -> expression - expression .)
    NEQ             reduce using rule 11 (expression -> expression - expression .)
    GEQ             reduce using rule 11 (expression -> expression - expression .)
    LEQ             reduce using rule 11 (expression -> expression - expression .)
    SG              reduce using rule 11 (expression -> expression - expression .)
    SL              reduce using rule 11 (expression -> expression - expression .)
    [               reduce using rule 11 (expression -> expression - expression .)
    ;               reduce using rule 11 (expression -> expression - expression .)
    )               reduce using rule 11 (expression -> expression - expression .)
    ]               reduce using rule 11 (expression -> expression - expression .)
    {               reduce using rule 11 (expression -> expression - expression .)
    *               shift and go to state 31
    /               shift and go to state 33

  ! *               [ reduce using rule 11 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 11 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 30 ]
  ! -               [ shift and go to state 32 ]
  ! IN              [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 29 ]
  ! NEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 27 ]
  ! LEQ             [ shift and go to state 34 ]
  ! SG              [ shift and go to state 36 ]
  ! SL              [ shift and go to state 28 ]
  ! [               [ shift and go to state 37 ]


state 51

    (13) expression -> expression / expression .
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

    +               reduce using rule 13 (expression -> expression / expression .)
    -               reduce using rule 13 (expression -> expression / expression .)
    *               reduce using rule 13 (expression -> expression / expression .)
    /               reduce using rule 13 (expression -> expression / expression .)
    IN              reduce using rule 13 (expression -> expression / expression .)
    EQ              reduce using rule 13 (expression -> expression / expression .)
    NEQ             reduce using rule 13 (expression -> expression / expression .)
    GEQ             reduce using rule 13 (expression -> expression / expression .)
    LEQ             reduce using rule 13 (expression -> expression / expression .)
    SG              reduce using rule 13 (expression -> expression / expression .)
    SL              reduce using rule 13 (expression -> expression / expression .)
    [               reduce using rule 13 (expression -> expression / expression .)
    ;               reduce using rule 13 (expression -> expression / expression .)
    )               reduce using rule 13 (expression -> expression / expression .)
    ]               reduce using rule 13 (expression -> expression / expression .)
    {               reduce using rule 13 (expression -> expression / expression .)

  ! +               [ shift and go to state 30 ]
  ! -               [ shift and go to state 32 ]
  ! *               [ shift and go to state 31 ]
  ! /               [ shift and go to state 33 ]
  ! IN              [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 29 ]
  ! NEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 27 ]
  ! LEQ             [ shift and go to state 34 ]
  ! SG              [ shift and go to state 36 ]
  ! SL              [ shift and go to state 28 ]
  ! [               [ shift and go to state 37 ]


state 52

    (18) expression -> expression LEQ expression .
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 18 (expression -> expression LEQ expression .)
    )               reduce using rule 18 (expression -> expression LEQ expression .)
    ]               reduce using rule 18 (expression -> expression LEQ expression .)
    {               reduce using rule 18 (expression -> expression LEQ expression .)
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37

  ! +               [ reduce using rule 18 (expression -> expression LEQ expression .) ]
  ! -               [ reduce using rule 18 (expression -> expression LEQ expression .) ]
  ! *               [ reduce using rule 18 (expression -> expression LEQ expression .) ]
  ! /               [ reduce using rule 18 (expression -> expression LEQ expression .) ]
  ! IN              [ reduce using rule 18 (expression -> expression LEQ expression .) ]
  ! EQ              [ reduce using rule 18 (expression -> expression LEQ expression .) ]
  ! NEQ             [ reduce using rule 18 (expression -> expression LEQ expression .) ]
  ! GEQ             [ reduce using rule 18 (expression -> expression LEQ expression .) ]
  ! LEQ             [ reduce using rule 18 (expression -> expression LEQ expression .) ]
  ! SG              [ reduce using rule 18 (expression -> expression LEQ expression .) ]
  ! SL              [ reduce using rule 18 (expression -> expression LEQ expression .) ]
  ! [               [ reduce using rule 18 (expression -> expression LEQ expression .) ]


state 53

    (14) expression -> expression IN expression .
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 14 (expression -> expression IN expression .)
    )               reduce using rule 14 (expression -> expression IN expression .)
    ]               reduce using rule 14 (expression -> expression IN expression .)
    {               reduce using rule 14 (expression -> expression IN expression .)
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37

  ! +               [ reduce using rule 14 (expression -> expression IN expression .) ]
  ! -               [ reduce using rule 14 (expression -> expression IN expression .) ]
  ! *               [ reduce using rule 14 (expression -> expression IN expression .) ]
  ! /               [ reduce using rule 14 (expression -> expression IN expression .) ]
  ! IN              [ reduce using rule 14 (expression -> expression IN expression .) ]
  ! EQ              [ reduce using rule 14 (expression -> expression IN expression .) ]
  ! NEQ             [ reduce using rule 14 (expression -> expression IN expression .) ]
  ! GEQ             [ reduce using rule 14 (expression -> expression IN expression .) ]
  ! LEQ             [ reduce using rule 14 (expression -> expression IN expression .) ]
  ! SG              [ reduce using rule 14 (expression -> expression IN expression .) ]
  ! SL              [ reduce using rule 14 (expression -> expression IN expression .) ]
  ! [               [ reduce using rule 14 (expression -> expression IN expression .) ]


state 54

    (19) expression -> expression SG expression .
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 19 (expression -> expression SG expression .)
    )               reduce using rule 19 (expression -> expression SG expression .)
    ]               reduce using rule 19 (expression -> expression SG expression .)
    {               reduce using rule 19 (expression -> expression SG expression .)
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37

  ! +               [ reduce using rule 19 (expression -> expression SG expression .) ]
  ! -               [ reduce using rule 19 (expression -> expression SG expression .) ]
  ! *               [ reduce using rule 19 (expression -> expression SG expression .) ]
  ! /               [ reduce using rule 19 (expression -> expression SG expression .) ]
  ! IN              [ reduce using rule 19 (expression -> expression SG expression .) ]
  ! EQ              [ reduce using rule 19 (expression -> expression SG expression .) ]
  ! NEQ             [ reduce using rule 19 (expression -> expression SG expression .) ]
  ! GEQ             [ reduce using rule 19 (expression -> expression SG expression .) ]
  ! LEQ             [ reduce using rule 19 (expression -> expression SG expression .) ]
  ! SG              [ reduce using rule 19 (expression -> expression SG expression .) ]
  ! SL              [ reduce using rule 19 (expression -> expression SG expression .) ]
  ! [               [ reduce using rule 19 (expression -> expression SG expression .) ]


state 55

    (23) expression -> expression [ expression . ]
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

    ]               shift and go to state 60
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37


state 56

    (16) expression -> expression NEQ expression .
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 16 (expression -> expression NEQ expression .)
    )               reduce using rule 16 (expression -> expression NEQ expression .)
    ]               reduce using rule 16 (expression -> expression NEQ expression .)
    {               reduce using rule 16 (expression -> expression NEQ expression .)
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37

  ! +               [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! -               [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! *               [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! /               [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! IN              [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! GEQ             [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! LEQ             [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! SG              [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! SL              [ reduce using rule 16 (expression -> expression NEQ expression .) ]
  ! [               [ reduce using rule 16 (expression -> expression NEQ expression .) ]


state 57

    (4) statementblock -> WHILE ( expression ) . { statementblock }

    {               shift and go to state 61


state 58

    (6) statementblock -> FOR NAME IN expression . { statementblock }
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

    {               shift and go to state 62
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37


state 59

    (5) statementblock -> FOR ( expression ; . expression ; expression ) { statementblock }
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 63

state 60

    (23) expression -> expression [ expression ] .

    +               reduce using rule 23 (expression -> expression [ expression ] .)
    -               reduce using rule 23 (expression -> expression [ expression ] .)
    *               reduce using rule 23 (expression -> expression [ expression ] .)
    /               reduce using rule 23 (expression -> expression [ expression ] .)
    IN              reduce using rule 23 (expression -> expression [ expression ] .)
    EQ              reduce using rule 23 (expression -> expression [ expression ] .)
    NEQ             reduce using rule 23 (expression -> expression [ expression ] .)
    GEQ             reduce using rule 23 (expression -> expression [ expression ] .)
    LEQ             reduce using rule 23 (expression -> expression [ expression ] .)
    SG              reduce using rule 23 (expression -> expression [ expression ] .)
    SL              reduce using rule 23 (expression -> expression [ expression ] .)
    [               reduce using rule 23 (expression -> expression [ expression ] .)
    ;               reduce using rule 23 (expression -> expression [ expression ] .)
    )               reduce using rule 23 (expression -> expression [ expression ] .)
    ]               reduce using rule 23 (expression -> expression [ expression ] .)
    {               reduce using rule 23 (expression -> expression [ expression ] .)


state 61

    (4) statementblock -> WHILE ( expression ) { . statementblock }
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (6) statementblock -> . FOR NAME IN expression { statementblock }
    (7) statementblock -> . statement ;
    (8) statement -> . FILTERON expression
    (9) statement -> . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    {               shift and go to state 15
    WHILE           shift and go to state 4
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    statementblock                 shift and go to state 64
    expression                     shift and go to state 16
    statement                      shift and go to state 7

state 62

    (6) statementblock -> FOR NAME IN expression { . statementblock }
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (6) statementblock -> . FOR NAME IN expression { statementblock }
    (7) statementblock -> . statement ;
    (8) statement -> . FILTERON expression
    (9) statement -> . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    {               shift and go to state 15
    WHILE           shift and go to state 4
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    statementblock                 shift and go to state 65
    expression                     shift and go to state 16
    statement                      shift and go to state 7

state 63

    (5) statementblock -> FOR ( expression ; expression . ; expression ) { statementblock }
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

    ;               shift and go to state 66
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37


state 64

    (4) statementblock -> WHILE ( expression ) { statementblock . }

    }               shift and go to state 67


state 65

    (6) statementblock -> FOR NAME IN expression { statementblock . }

    }               shift and go to state 68


state 66

    (5) statementblock -> FOR ( expression ; expression ; . expression ) { statementblock }
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    expression                     shift and go to state 69

state 67

    (4) statementblock -> WHILE ( expression ) { statementblock } .

    }               reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    {               reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    WHILE           reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    FOR             reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    FILTERON        reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    -               reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    (               reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    BOOL            reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    NUMBER          reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    STRING          reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    OBSERVATION     reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    NAME            reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    TEST            reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    $end            reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)


state 68

    (6) statementblock -> FOR NAME IN expression { statementblock } .

    }               reduce using rule 6 (statementblock -> FOR NAME IN expression { statementblock } .)
    {               reduce using rule 6 (statementblock -> FOR NAME IN expression { statementblock } .)
    WHILE           reduce using rule 6 (statementblock -> FOR NAME IN expression { statementblock } .)
    FOR             reduce using rule 6 (statementblock -> FOR NAME IN expression { statementblock } .)
    FILTERON        reduce using rule 6 (statementblock -> FOR NAME IN expression { statementblock } .)
    -               reduce using rule 6 (statementblock -> FOR NAME IN expression { statementblock } .)
    (               reduce using rule 6 (statementblock -> FOR NAME IN expression { statementblock } .)
    BOOL            reduce using rule 6 (statementblock -> FOR NAME IN expression { statementblock } .)
    NUMBER          reduce using rule 6 (statementblock -> FOR NAME IN expression { statementblock } .)
    STRING          reduce using rule 6 (statementblock -> FOR NAME IN expression { statementblock } .)
    OBSERVATION     reduce using rule 6 (statementblock -> FOR NAME IN expression { statementblock } .)
    NAME            reduce using rule 6 (statementblock -> FOR NAME IN expression { statementblock } .)
    TEST            reduce using rule 6 (statementblock -> FOR NAME IN expression { statementblock } .)
    $end            reduce using rule 6 (statementblock -> FOR NAME IN expression { statementblock } .)


state 69

    (5) statementblock -> FOR ( expression ; expression ; expression . ) { statementblock }
    (10) expression -> expression . + expression
    (11) expression -> expression . - expression
    (12) expression -> expression . * expression
    (13) expression -> expression . / expression
    (14) expression -> expression . IN expression
    (15) expression -> expression . EQ expression
    (16) expression -> expression . NEQ expression
    (17) expression -> expression . GEQ expression
    (18) expression -> expression . LEQ expression
    (19) expression -> expression . SG expression
    (20) expression -> expression . SL expression
    (23) expression -> expression . [ expression ]

    )               shift and go to state 70
    +               shift and go to state 30
    -               shift and go to state 32
    *               shift and go to state 31
    /               shift and go to state 33
    IN              shift and go to state 35
    EQ              shift and go to state 29
    NEQ             shift and go to state 38
    GEQ             shift and go to state 27
    LEQ             shift and go to state 34
    SG              shift and go to state 36
    SL              shift and go to state 28
    [               shift and go to state 37


state 70

    (5) statementblock -> FOR ( expression ; expression ; expression ) . { statementblock }

    {               shift and go to state 71


state 71

    (5) statementblock -> FOR ( expression ; expression ; expression ) { . statementblock }
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (6) statementblock -> . FOR NAME IN expression { statementblock }
    (7) statementblock -> . statement ;
    (8) statement -> . FILTERON expression
    (9) statement -> . expression
    (10) expression -> . expression + expression
    (11) expression -> . expression - expression
    (12) expression -> . expression * expression
    (13) expression -> . expression / expression
    (14) expression -> . expression IN expression
    (15) expression -> . expression EQ expression
    (16) expression -> . expression NEQ expression
    (17) expression -> . expression GEQ expression
    (18) expression -> . expression LEQ expression
    (19) expression -> . expression SG expression
    (20) expression -> . expression SL expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . expression [ expression ]
    (24) expression -> . BOOL
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . OBSERVATION
    (28) expression -> . NAME ASSIGN expression
    (29) expression -> . NAME
    (30) expression -> . TEST

    {               shift and go to state 15
    WHILE           shift and go to state 4
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 13
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 12
    NAME            shift and go to state 11
    TEST            shift and go to state 14

    statementblock                 shift and go to state 72
    expression                     shift and go to state 16
    statement                      shift and go to state 7

state 72

    (5) statementblock -> FOR ( expression ; expression ; expression ) { statementblock . }

    }               shift and go to state 73


state 73

    (5) statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .

    }               reduce using rule 5 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    {               reduce using rule 5 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    WHILE           reduce using rule 5 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    FOR             reduce using rule 5 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    FILTERON        reduce using rule 5 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    -               reduce using rule 5 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    (               reduce using rule 5 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    BOOL            reduce using rule 5 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    NUMBER          reduce using rule 5 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    STRING          reduce using rule 5 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    OBSERVATION     reduce using rule 5 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    NAME            reduce using rule 5 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    TEST            reduce using rule 5 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    $end            reduce using rule 5 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 43 resolved as shift
WARNING: shift/reduce conflict for - in state 43 resolved as shift
WARNING: shift/reduce conflict for * in state 43 resolved as shift
WARNING: shift/reduce conflict for / in state 43 resolved as shift
WARNING: shift/reduce conflict for IN in state 43 resolved as shift
WARNING: shift/reduce conflict for EQ in state 43 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 43 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 43 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 43 resolved as shift
WARNING: shift/reduce conflict for SG in state 43 resolved as shift
WARNING: shift/reduce conflict for SL in state 43 resolved as shift
WARNING: shift/reduce conflict for [ in state 43 resolved as shift
WARNING: shift/reduce conflict for + in state 45 resolved as shift
WARNING: shift/reduce conflict for - in state 45 resolved as shift
WARNING: shift/reduce conflict for * in state 45 resolved as shift
WARNING: shift/reduce conflict for / in state 45 resolved as shift
WARNING: shift/reduce conflict for IN in state 45 resolved as shift
WARNING: shift/reduce conflict for EQ in state 45 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 45 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 45 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 45 resolved as shift
WARNING: shift/reduce conflict for SG in state 45 resolved as shift
WARNING: shift/reduce conflict for SL in state 45 resolved as shift
WARNING: shift/reduce conflict for [ in state 45 resolved as shift
WARNING: shift/reduce conflict for + in state 46 resolved as shift
WARNING: shift/reduce conflict for - in state 46 resolved as shift
WARNING: shift/reduce conflict for * in state 46 resolved as shift
WARNING: shift/reduce conflict for / in state 46 resolved as shift
WARNING: shift/reduce conflict for IN in state 46 resolved as shift
WARNING: shift/reduce conflict for EQ in state 46 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 46 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 46 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 46 resolved as shift
WARNING: shift/reduce conflict for SG in state 46 resolved as shift
WARNING: shift/reduce conflict for SL in state 46 resolved as shift
WARNING: shift/reduce conflict for [ in state 46 resolved as shift
WARNING: shift/reduce conflict for + in state 47 resolved as shift
WARNING: shift/reduce conflict for - in state 47 resolved as shift
WARNING: shift/reduce conflict for * in state 47 resolved as shift
WARNING: shift/reduce conflict for / in state 47 resolved as shift
WARNING: shift/reduce conflict for IN in state 47 resolved as shift
WARNING: shift/reduce conflict for EQ in state 47 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 47 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 47 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 47 resolved as shift
WARNING: shift/reduce conflict for SG in state 47 resolved as shift
WARNING: shift/reduce conflict for SL in state 47 resolved as shift
WARNING: shift/reduce conflict for [ in state 47 resolved as shift
WARNING: shift/reduce conflict for + in state 52 resolved as shift
WARNING: shift/reduce conflict for - in state 52 resolved as shift
WARNING: shift/reduce conflict for * in state 52 resolved as shift
WARNING: shift/reduce conflict for / in state 52 resolved as shift
WARNING: shift/reduce conflict for IN in state 52 resolved as shift
WARNING: shift/reduce conflict for EQ in state 52 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 52 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 52 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 52 resolved as shift
WARNING: shift/reduce conflict for SG in state 52 resolved as shift
WARNING: shift/reduce conflict for SL in state 52 resolved as shift
WARNING: shift/reduce conflict for [ in state 52 resolved as shift
WARNING: shift/reduce conflict for + in state 53 resolved as shift
WARNING: shift/reduce conflict for - in state 53 resolved as shift
WARNING: shift/reduce conflict for * in state 53 resolved as shift
WARNING: shift/reduce conflict for / in state 53 resolved as shift
WARNING: shift/reduce conflict for IN in state 53 resolved as shift
WARNING: shift/reduce conflict for EQ in state 53 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 53 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 53 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 53 resolved as shift
WARNING: shift/reduce conflict for SG in state 53 resolved as shift
WARNING: shift/reduce conflict for SL in state 53 resolved as shift
WARNING: shift/reduce conflict for [ in state 53 resolved as shift
WARNING: shift/reduce conflict for + in state 54 resolved as shift
WARNING: shift/reduce conflict for - in state 54 resolved as shift
WARNING: shift/reduce conflict for * in state 54 resolved as shift
WARNING: shift/reduce conflict for / in state 54 resolved as shift
WARNING: shift/reduce conflict for IN in state 54 resolved as shift
WARNING: shift/reduce conflict for EQ in state 54 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 54 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 54 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 54 resolved as shift
WARNING: shift/reduce conflict for SG in state 54 resolved as shift
WARNING: shift/reduce conflict for SL in state 54 resolved as shift
WARNING: shift/reduce conflict for [ in state 54 resolved as shift
WARNING: shift/reduce conflict for + in state 56 resolved as shift
WARNING: shift/reduce conflict for - in state 56 resolved as shift
WARNING: shift/reduce conflict for * in state 56 resolved as shift
WARNING: shift/reduce conflict for / in state 56 resolved as shift
WARNING: shift/reduce conflict for IN in state 56 resolved as shift
WARNING: shift/reduce conflict for EQ in state 56 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 56 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 56 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 56 resolved as shift
WARNING: shift/reduce conflict for SG in state 56 resolved as shift
WARNING: shift/reduce conflict for SL in state 56 resolved as shift
WARNING: shift/reduce conflict for [ in state 56 resolved as shift

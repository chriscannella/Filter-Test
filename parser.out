Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statementlist
Rule 1     statementlist -> statementlist statementblock
Rule 2     statementlist -> statementblock
Rule 3     statementblock -> { statementlist }
Rule 4     statementblock -> WHILE ( expression ) { statementblock }
Rule 5     statementblock -> IF ( expression ) { statementblock }
Rule 6     statementblock -> IF ( expression ) { statementblock } ELSE { statementblock }
Rule 7     statementblock -> FOR ( expression ; expression ; expression ) { statementblock }
Rule 8     statementblock -> FOR NAME IN expression { statementblock }
Rule 9     statementblock -> statement ;
Rule 10    statement -> FILTERON expression
Rule 11    statement -> expression
Rule 12    expression -> expression PLUS expression
Rule 13    expression -> expression MINUS expression
Rule 14    expression -> expression MULTIPLY expression
Rule 15    expression -> expression DIVIDE expression
Rule 16    expression -> expression IN expression
Rule 17    expression -> expression EQ expression
Rule 18    expression -> expression NEQ expression
Rule 19    expression -> expression GEQ expression
Rule 20    expression -> expression LEQ expression
Rule 21    expression -> expression SG expression
Rule 22    expression -> expression SL expression
Rule 23    expression -> expression POWER expression
Rule 24    expression -> MINUS expression
Rule 25    expression -> ( expression )
Rule 26    expression -> expression [ expression ]
Rule 27    expression -> BOOL
Rule 28    expression -> NUMBER
Rule 29    expression -> STRING
Rule 30    expression -> OBSERVATION
Rule 31    expression -> NAME ( expression )
Rule 32    expression -> NAME ASSIGN expression
Rule 33    expression -> NAME PLUSEQ expression
Rule 34    expression -> NAME MINEQ expression
Rule 35    expression -> NAME MULEQ expression
Rule 36    expression -> NAME DIVEQ expression
Rule 37    expression -> NAME
Rule 38    expression -> TEST

Terminals, with rules where they appear

(                    : 4 5 6 7 25 31
)                    : 4 5 6 7 25 31
;                    : 7 7 9
ASSIGN               : 32
BOOL                 : 27
DIVEQ                : 36
DIVIDE               : 15
ELSE                 : 6
EQ                   : 17
FILTERON             : 10
FOR                  : 7 8
GEQ                  : 19
IF                   : 5 6
IN                   : 8 16
LEQ                  : 20
MINEQ                : 34
MINUS                : 13 24
MULEQ                : 35
MULTIPLY             : 14
NAME                 : 8 31 32 33 34 35 36 37
NEQ                  : 18
NUMBER               : 28
OBSERVATION          : 30
PLUS                 : 12
PLUSEQ               : 33
POWER                : 23
SG                   : 21
SL                   : 22
STRING               : 29
TEST                 : 38
WHILE                : 4
[                    : 26
]                    : 26
error                : 
{                    : 3 4 5 6 6 7 8
}                    : 3 4 5 6 6 7 8

Nonterminals, with rules where they appear

expression           : 4 5 6 7 7 7 8 10 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 25 26 26 31 32 33 34 35 36
statement            : 9
statementblock       : 1 2 4 5 6 6 7 8
statementlist        : 1 3 0

Parsing method: LALR

state 0

    (0) S' -> . statementlist
    (1) statementlist -> . statementlist statementblock
    (2) statementlist -> . statementblock
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 11
    expression                     shift and go to state 17
    statement                      shift and go to state 8
    statementlist                  shift and go to state 3

state 1

    (10) statement -> FILTERON . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 18

state 2

    (28) expression -> NUMBER .

    PLUS            reduce using rule 28 (expression -> NUMBER .)
    MINUS           reduce using rule 28 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 28 (expression -> NUMBER .)
    DIVIDE          reduce using rule 28 (expression -> NUMBER .)
    IN              reduce using rule 28 (expression -> NUMBER .)
    EQ              reduce using rule 28 (expression -> NUMBER .)
    NEQ             reduce using rule 28 (expression -> NUMBER .)
    GEQ             reduce using rule 28 (expression -> NUMBER .)
    LEQ             reduce using rule 28 (expression -> NUMBER .)
    SG              reduce using rule 28 (expression -> NUMBER .)
    SL              reduce using rule 28 (expression -> NUMBER .)
    POWER           reduce using rule 28 (expression -> NUMBER .)
    [               reduce using rule 28 (expression -> NUMBER .)
    ;               reduce using rule 28 (expression -> NUMBER .)
    )               reduce using rule 28 (expression -> NUMBER .)
    ]               reduce using rule 28 (expression -> NUMBER .)
    {               reduce using rule 28 (expression -> NUMBER .)


state 3

    (0) S' -> statementlist .
    (1) statementlist -> statementlist . statementblock
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 19
    expression                     shift and go to state 17
    statement                      shift and go to state 8

state 4

    (4) statementblock -> WHILE . ( expression ) { statementblock }

    (               shift and go to state 20


state 5

    (29) expression -> STRING .

    PLUS            reduce using rule 29 (expression -> STRING .)
    MINUS           reduce using rule 29 (expression -> STRING .)
    MULTIPLY        reduce using rule 29 (expression -> STRING .)
    DIVIDE          reduce using rule 29 (expression -> STRING .)
    IN              reduce using rule 29 (expression -> STRING .)
    EQ              reduce using rule 29 (expression -> STRING .)
    NEQ             reduce using rule 29 (expression -> STRING .)
    GEQ             reduce using rule 29 (expression -> STRING .)
    LEQ             reduce using rule 29 (expression -> STRING .)
    SG              reduce using rule 29 (expression -> STRING .)
    SL              reduce using rule 29 (expression -> STRING .)
    POWER           reduce using rule 29 (expression -> STRING .)
    [               reduce using rule 29 (expression -> STRING .)
    ;               reduce using rule 29 (expression -> STRING .)
    )               reduce using rule 29 (expression -> STRING .)
    ]               reduce using rule 29 (expression -> STRING .)
    {               reduce using rule 29 (expression -> STRING .)


state 6

    (24) expression -> MINUS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 21

state 7

    (25) expression -> ( . expression )
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 22

state 8

    (9) statementblock -> statement . ;

    ;               shift and go to state 23


state 9

    (7) statementblock -> FOR . ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> FOR . NAME IN expression { statementblock }

    (               shift and go to state 25
    NAME            shift and go to state 24


state 10

    (5) statementblock -> IF . ( expression ) { statementblock }
    (6) statementblock -> IF . ( expression ) { statementblock } ELSE { statementblock }

    (               shift and go to state 26


state 11

    (2) statementlist -> statementblock .

    {               reduce using rule 2 (statementlist -> statementblock .)
    WHILE           reduce using rule 2 (statementlist -> statementblock .)
    IF              reduce using rule 2 (statementlist -> statementblock .)
    FOR             reduce using rule 2 (statementlist -> statementblock .)
    FILTERON        reduce using rule 2 (statementlist -> statementblock .)
    MINUS           reduce using rule 2 (statementlist -> statementblock .)
    (               reduce using rule 2 (statementlist -> statementblock .)
    BOOL            reduce using rule 2 (statementlist -> statementblock .)
    NUMBER          reduce using rule 2 (statementlist -> statementblock .)
    STRING          reduce using rule 2 (statementlist -> statementblock .)
    OBSERVATION     reduce using rule 2 (statementlist -> statementblock .)
    NAME            reduce using rule 2 (statementlist -> statementblock .)
    TEST            reduce using rule 2 (statementlist -> statementblock .)
    $end            reduce using rule 2 (statementlist -> statementblock .)
    }               reduce using rule 2 (statementlist -> statementblock .)


state 12

    (31) expression -> NAME . ( expression )
    (32) expression -> NAME . ASSIGN expression
    (33) expression -> NAME . PLUSEQ expression
    (34) expression -> NAME . MINEQ expression
    (35) expression -> NAME . MULEQ expression
    (36) expression -> NAME . DIVEQ expression
    (37) expression -> NAME .

    (               shift and go to state 27
    ASSIGN          shift and go to state 31
    PLUSEQ          shift and go to state 29
    MINEQ           shift and go to state 28
    MULEQ           shift and go to state 30
    DIVEQ           shift and go to state 32
    PLUS            reduce using rule 37 (expression -> NAME .)
    MINUS           reduce using rule 37 (expression -> NAME .)
    MULTIPLY        reduce using rule 37 (expression -> NAME .)
    DIVIDE          reduce using rule 37 (expression -> NAME .)
    IN              reduce using rule 37 (expression -> NAME .)
    EQ              reduce using rule 37 (expression -> NAME .)
    NEQ             reduce using rule 37 (expression -> NAME .)
    GEQ             reduce using rule 37 (expression -> NAME .)
    LEQ             reduce using rule 37 (expression -> NAME .)
    SG              reduce using rule 37 (expression -> NAME .)
    SL              reduce using rule 37 (expression -> NAME .)
    POWER           reduce using rule 37 (expression -> NAME .)
    [               reduce using rule 37 (expression -> NAME .)
    ;               reduce using rule 37 (expression -> NAME .)
    )               reduce using rule 37 (expression -> NAME .)
    ]               reduce using rule 37 (expression -> NAME .)
    {               reduce using rule 37 (expression -> NAME .)


state 13

    (30) expression -> OBSERVATION .

    PLUS            reduce using rule 30 (expression -> OBSERVATION .)
    MINUS           reduce using rule 30 (expression -> OBSERVATION .)
    MULTIPLY        reduce using rule 30 (expression -> OBSERVATION .)
    DIVIDE          reduce using rule 30 (expression -> OBSERVATION .)
    IN              reduce using rule 30 (expression -> OBSERVATION .)
    EQ              reduce using rule 30 (expression -> OBSERVATION .)
    NEQ             reduce using rule 30 (expression -> OBSERVATION .)
    GEQ             reduce using rule 30 (expression -> OBSERVATION .)
    LEQ             reduce using rule 30 (expression -> OBSERVATION .)
    SG              reduce using rule 30 (expression -> OBSERVATION .)
    SL              reduce using rule 30 (expression -> OBSERVATION .)
    POWER           reduce using rule 30 (expression -> OBSERVATION .)
    [               reduce using rule 30 (expression -> OBSERVATION .)
    ;               reduce using rule 30 (expression -> OBSERVATION .)
    )               reduce using rule 30 (expression -> OBSERVATION .)
    ]               reduce using rule 30 (expression -> OBSERVATION .)
    {               reduce using rule 30 (expression -> OBSERVATION .)


state 14

    (27) expression -> BOOL .

    PLUS            reduce using rule 27 (expression -> BOOL .)
    MINUS           reduce using rule 27 (expression -> BOOL .)
    MULTIPLY        reduce using rule 27 (expression -> BOOL .)
    DIVIDE          reduce using rule 27 (expression -> BOOL .)
    IN              reduce using rule 27 (expression -> BOOL .)
    EQ              reduce using rule 27 (expression -> BOOL .)
    NEQ             reduce using rule 27 (expression -> BOOL .)
    GEQ             reduce using rule 27 (expression -> BOOL .)
    LEQ             reduce using rule 27 (expression -> BOOL .)
    SG              reduce using rule 27 (expression -> BOOL .)
    SL              reduce using rule 27 (expression -> BOOL .)
    POWER           reduce using rule 27 (expression -> BOOL .)
    [               reduce using rule 27 (expression -> BOOL .)
    ;               reduce using rule 27 (expression -> BOOL .)
    )               reduce using rule 27 (expression -> BOOL .)
    ]               reduce using rule 27 (expression -> BOOL .)
    {               reduce using rule 27 (expression -> BOOL .)


state 15

    (38) expression -> TEST .

    PLUS            reduce using rule 38 (expression -> TEST .)
    MINUS           reduce using rule 38 (expression -> TEST .)
    MULTIPLY        reduce using rule 38 (expression -> TEST .)
    DIVIDE          reduce using rule 38 (expression -> TEST .)
    IN              reduce using rule 38 (expression -> TEST .)
    EQ              reduce using rule 38 (expression -> TEST .)
    NEQ             reduce using rule 38 (expression -> TEST .)
    GEQ             reduce using rule 38 (expression -> TEST .)
    LEQ             reduce using rule 38 (expression -> TEST .)
    SG              reduce using rule 38 (expression -> TEST .)
    SL              reduce using rule 38 (expression -> TEST .)
    POWER           reduce using rule 38 (expression -> TEST .)
    [               reduce using rule 38 (expression -> TEST .)
    ;               reduce using rule 38 (expression -> TEST .)
    )               reduce using rule 38 (expression -> TEST .)
    ]               reduce using rule 38 (expression -> TEST .)
    {               reduce using rule 38 (expression -> TEST .)


state 16

    (3) statementblock -> { . statementlist }
    (1) statementlist -> . statementlist statementblock
    (2) statementlist -> . statementblock
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 11
    expression                     shift and go to state 17
    statement                      shift and go to state 8
    statementlist                  shift and go to state 33

state 17

    (11) statement -> expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    ;               reduce using rule 11 (statement -> expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44


state 18

    (10) statement -> FILTERON expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    ;               reduce using rule 10 (statement -> FILTERON expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44


state 19

    (1) statementlist -> statementlist statementblock .

    {               reduce using rule 1 (statementlist -> statementlist statementblock .)
    WHILE           reduce using rule 1 (statementlist -> statementlist statementblock .)
    IF              reduce using rule 1 (statementlist -> statementlist statementblock .)
    FOR             reduce using rule 1 (statementlist -> statementlist statementblock .)
    FILTERON        reduce using rule 1 (statementlist -> statementlist statementblock .)
    MINUS           reduce using rule 1 (statementlist -> statementlist statementblock .)
    (               reduce using rule 1 (statementlist -> statementlist statementblock .)
    BOOL            reduce using rule 1 (statementlist -> statementlist statementblock .)
    NUMBER          reduce using rule 1 (statementlist -> statementlist statementblock .)
    STRING          reduce using rule 1 (statementlist -> statementlist statementblock .)
    OBSERVATION     reduce using rule 1 (statementlist -> statementlist statementblock .)
    NAME            reduce using rule 1 (statementlist -> statementlist statementblock .)
    TEST            reduce using rule 1 (statementlist -> statementlist statementblock .)
    $end            reduce using rule 1 (statementlist -> statementlist statementblock .)
    }               reduce using rule 1 (statementlist -> statementlist statementblock .)


state 20

    (4) statementblock -> WHILE ( . expression ) { statementblock }
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 47

state 21

    (24) expression -> MINUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    PLUS            reduce using rule 24 (expression -> MINUS expression .)
    MINUS           reduce using rule 24 (expression -> MINUS expression .)
    MULTIPLY        reduce using rule 24 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 24 (expression -> MINUS expression .)
    IN              reduce using rule 24 (expression -> MINUS expression .)
    EQ              reduce using rule 24 (expression -> MINUS expression .)
    NEQ             reduce using rule 24 (expression -> MINUS expression .)
    GEQ             reduce using rule 24 (expression -> MINUS expression .)
    LEQ             reduce using rule 24 (expression -> MINUS expression .)
    SG              reduce using rule 24 (expression -> MINUS expression .)
    SL              reduce using rule 24 (expression -> MINUS expression .)
    POWER           reduce using rule 24 (expression -> MINUS expression .)
    [               reduce using rule 24 (expression -> MINUS expression .)
    ;               reduce using rule 24 (expression -> MINUS expression .)
    )               reduce using rule 24 (expression -> MINUS expression .)
    ]               reduce using rule 24 (expression -> MINUS expression .)
    {               reduce using rule 24 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 45 ]
  ! MULTIPLY        [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! IN              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 37 ]
  ! NEQ             [ shift and go to state 46 ]
  ! GEQ             [ shift and go to state 34 ]
  ! LEQ             [ shift and go to state 39 ]
  ! SG              [ shift and go to state 43 ]
  ! SL              [ shift and go to state 38 ]
  ! POWER           [ shift and go to state 36 ]
  ! [               [ shift and go to state 44 ]


state 22

    (25) expression -> ( expression . )
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    )               shift and go to state 48
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44


state 23

    (9) statementblock -> statement ; .

    }               reduce using rule 9 (statementblock -> statement ; .)
    {               reduce using rule 9 (statementblock -> statement ; .)
    WHILE           reduce using rule 9 (statementblock -> statement ; .)
    IF              reduce using rule 9 (statementblock -> statement ; .)
    FOR             reduce using rule 9 (statementblock -> statement ; .)
    FILTERON        reduce using rule 9 (statementblock -> statement ; .)
    MINUS           reduce using rule 9 (statementblock -> statement ; .)
    (               reduce using rule 9 (statementblock -> statement ; .)
    BOOL            reduce using rule 9 (statementblock -> statement ; .)
    NUMBER          reduce using rule 9 (statementblock -> statement ; .)
    STRING          reduce using rule 9 (statementblock -> statement ; .)
    OBSERVATION     reduce using rule 9 (statementblock -> statement ; .)
    NAME            reduce using rule 9 (statementblock -> statement ; .)
    TEST            reduce using rule 9 (statementblock -> statement ; .)
    $end            reduce using rule 9 (statementblock -> statement ; .)


state 24

    (8) statementblock -> FOR NAME . IN expression { statementblock }

    IN              shift and go to state 49


state 25

    (7) statementblock -> FOR ( . expression ; expression ; expression ) { statementblock }
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 50

state 26

    (5) statementblock -> IF ( . expression ) { statementblock }
    (6) statementblock -> IF ( . expression ) { statementblock } ELSE { statementblock }
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 51

state 27

    (31) expression -> NAME ( . expression )
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 52

state 28

    (34) expression -> NAME MINEQ . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 53

state 29

    (33) expression -> NAME PLUSEQ . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 54

state 30

    (35) expression -> NAME MULEQ . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 55

state 31

    (32) expression -> NAME ASSIGN . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 56

state 32

    (36) expression -> NAME DIVEQ . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 57

state 33

    (3) statementblock -> { statementlist . }
    (1) statementlist -> statementlist . statementblock
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    }               shift and go to state 58
    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 19
    expression                     shift and go to state 17
    statement                      shift and go to state 8

state 34

    (19) expression -> expression GEQ . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 59

state 35

    (15) expression -> expression DIVIDE . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 60

state 36

    (23) expression -> expression POWER . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 61

state 37

    (17) expression -> expression EQ . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 62

state 38

    (22) expression -> expression SL . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 63

state 39

    (20) expression -> expression LEQ . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 64

state 40

    (12) expression -> expression PLUS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 65

state 41

    (16) expression -> expression IN . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 66

state 42

    (14) expression -> expression MULTIPLY . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 67

state 43

    (21) expression -> expression SG . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 68

state 44

    (26) expression -> expression [ . expression ]
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 69

state 45

    (13) expression -> expression MINUS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 70

state 46

    (18) expression -> expression NEQ . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 71

state 47

    (4) statementblock -> WHILE ( expression . ) { statementblock }
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    )               shift and go to state 72
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44


state 48

    (25) expression -> ( expression ) .

    PLUS            reduce using rule 25 (expression -> ( expression ) .)
    MINUS           reduce using rule 25 (expression -> ( expression ) .)
    MULTIPLY        reduce using rule 25 (expression -> ( expression ) .)
    DIVIDE          reduce using rule 25 (expression -> ( expression ) .)
    IN              reduce using rule 25 (expression -> ( expression ) .)
    EQ              reduce using rule 25 (expression -> ( expression ) .)
    NEQ             reduce using rule 25 (expression -> ( expression ) .)
    GEQ             reduce using rule 25 (expression -> ( expression ) .)
    LEQ             reduce using rule 25 (expression -> ( expression ) .)
    SG              reduce using rule 25 (expression -> ( expression ) .)
    SL              reduce using rule 25 (expression -> ( expression ) .)
    POWER           reduce using rule 25 (expression -> ( expression ) .)
    [               reduce using rule 25 (expression -> ( expression ) .)
    ;               reduce using rule 25 (expression -> ( expression ) .)
    )               reduce using rule 25 (expression -> ( expression ) .)
    ]               reduce using rule 25 (expression -> ( expression ) .)
    {               reduce using rule 25 (expression -> ( expression ) .)


state 49

    (8) statementblock -> FOR NAME IN . expression { statementblock }
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 73

state 50

    (7) statementblock -> FOR ( expression . ; expression ; expression ) { statementblock }
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    ;               shift and go to state 74
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44


state 51

    (5) statementblock -> IF ( expression . ) { statementblock }
    (6) statementblock -> IF ( expression . ) { statementblock } ELSE { statementblock }
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    )               shift and go to state 75
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44


state 52

    (31) expression -> NAME ( expression . )
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    )               shift and go to state 76
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44


state 53

    (34) expression -> NAME MINEQ expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 34 (expression -> NAME MINEQ expression .)
    )               reduce using rule 34 (expression -> NAME MINEQ expression .)
    ]               reduce using rule 34 (expression -> NAME MINEQ expression .)
    {               reduce using rule 34 (expression -> NAME MINEQ expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44

  ! PLUS            [ reduce using rule 34 (expression -> NAME MINEQ expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> NAME MINEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 34 (expression -> NAME MINEQ expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> NAME MINEQ expression .) ]
  ! IN              [ reduce using rule 34 (expression -> NAME MINEQ expression .) ]
  ! EQ              [ reduce using rule 34 (expression -> NAME MINEQ expression .) ]
  ! NEQ             [ reduce using rule 34 (expression -> NAME MINEQ expression .) ]
  ! GEQ             [ reduce using rule 34 (expression -> NAME MINEQ expression .) ]
  ! LEQ             [ reduce using rule 34 (expression -> NAME MINEQ expression .) ]
  ! SG              [ reduce using rule 34 (expression -> NAME MINEQ expression .) ]
  ! SL              [ reduce using rule 34 (expression -> NAME MINEQ expression .) ]
  ! POWER           [ reduce using rule 34 (expression -> NAME MINEQ expression .) ]
  ! [               [ reduce using rule 34 (expression -> NAME MINEQ expression .) ]


state 54

    (33) expression -> NAME PLUSEQ expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 33 (expression -> NAME PLUSEQ expression .)
    )               reduce using rule 33 (expression -> NAME PLUSEQ expression .)
    ]               reduce using rule 33 (expression -> NAME PLUSEQ expression .)
    {               reduce using rule 33 (expression -> NAME PLUSEQ expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44

  ! PLUS            [ reduce using rule 33 (expression -> NAME PLUSEQ expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> NAME PLUSEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 33 (expression -> NAME PLUSEQ expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> NAME PLUSEQ expression .) ]
  ! IN              [ reduce using rule 33 (expression -> NAME PLUSEQ expression .) ]
  ! EQ              [ reduce using rule 33 (expression -> NAME PLUSEQ expression .) ]
  ! NEQ             [ reduce using rule 33 (expression -> NAME PLUSEQ expression .) ]
  ! GEQ             [ reduce using rule 33 (expression -> NAME PLUSEQ expression .) ]
  ! LEQ             [ reduce using rule 33 (expression -> NAME PLUSEQ expression .) ]
  ! SG              [ reduce using rule 33 (expression -> NAME PLUSEQ expression .) ]
  ! SL              [ reduce using rule 33 (expression -> NAME PLUSEQ expression .) ]
  ! POWER           [ reduce using rule 33 (expression -> NAME PLUSEQ expression .) ]
  ! [               [ reduce using rule 33 (expression -> NAME PLUSEQ expression .) ]


state 55

    (35) expression -> NAME MULEQ expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 35 (expression -> NAME MULEQ expression .)
    )               reduce using rule 35 (expression -> NAME MULEQ expression .)
    ]               reduce using rule 35 (expression -> NAME MULEQ expression .)
    {               reduce using rule 35 (expression -> NAME MULEQ expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44

  ! PLUS            [ reduce using rule 35 (expression -> NAME MULEQ expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> NAME MULEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 35 (expression -> NAME MULEQ expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> NAME MULEQ expression .) ]
  ! IN              [ reduce using rule 35 (expression -> NAME MULEQ expression .) ]
  ! EQ              [ reduce using rule 35 (expression -> NAME MULEQ expression .) ]
  ! NEQ             [ reduce using rule 35 (expression -> NAME MULEQ expression .) ]
  ! GEQ             [ reduce using rule 35 (expression -> NAME MULEQ expression .) ]
  ! LEQ             [ reduce using rule 35 (expression -> NAME MULEQ expression .) ]
  ! SG              [ reduce using rule 35 (expression -> NAME MULEQ expression .) ]
  ! SL              [ reduce using rule 35 (expression -> NAME MULEQ expression .) ]
  ! POWER           [ reduce using rule 35 (expression -> NAME MULEQ expression .) ]
  ! [               [ reduce using rule 35 (expression -> NAME MULEQ expression .) ]


state 56

    (32) expression -> NAME ASSIGN expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 32 (expression -> NAME ASSIGN expression .)
    )               reduce using rule 32 (expression -> NAME ASSIGN expression .)
    ]               reduce using rule 32 (expression -> NAME ASSIGN expression .)
    {               reduce using rule 32 (expression -> NAME ASSIGN expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44

  ! PLUS            [ reduce using rule 32 (expression -> NAME ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> NAME ASSIGN expression .) ]
  ! MULTIPLY        [ reduce using rule 32 (expression -> NAME ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> NAME ASSIGN expression .) ]
  ! IN              [ reduce using rule 32 (expression -> NAME ASSIGN expression .) ]
  ! EQ              [ reduce using rule 32 (expression -> NAME ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 32 (expression -> NAME ASSIGN expression .) ]
  ! GEQ             [ reduce using rule 32 (expression -> NAME ASSIGN expression .) ]
  ! LEQ             [ reduce using rule 32 (expression -> NAME ASSIGN expression .) ]
  ! SG              [ reduce using rule 32 (expression -> NAME ASSIGN expression .) ]
  ! SL              [ reduce using rule 32 (expression -> NAME ASSIGN expression .) ]
  ! POWER           [ reduce using rule 32 (expression -> NAME ASSIGN expression .) ]
  ! [               [ reduce using rule 32 (expression -> NAME ASSIGN expression .) ]


state 57

    (36) expression -> NAME DIVEQ expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 36 (expression -> NAME DIVEQ expression .)
    )               reduce using rule 36 (expression -> NAME DIVEQ expression .)
    ]               reduce using rule 36 (expression -> NAME DIVEQ expression .)
    {               reduce using rule 36 (expression -> NAME DIVEQ expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44

  ! PLUS            [ reduce using rule 36 (expression -> NAME DIVEQ expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> NAME DIVEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 36 (expression -> NAME DIVEQ expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> NAME DIVEQ expression .) ]
  ! IN              [ reduce using rule 36 (expression -> NAME DIVEQ expression .) ]
  ! EQ              [ reduce using rule 36 (expression -> NAME DIVEQ expression .) ]
  ! NEQ             [ reduce using rule 36 (expression -> NAME DIVEQ expression .) ]
  ! GEQ             [ reduce using rule 36 (expression -> NAME DIVEQ expression .) ]
  ! LEQ             [ reduce using rule 36 (expression -> NAME DIVEQ expression .) ]
  ! SG              [ reduce using rule 36 (expression -> NAME DIVEQ expression .) ]
  ! SL              [ reduce using rule 36 (expression -> NAME DIVEQ expression .) ]
  ! POWER           [ reduce using rule 36 (expression -> NAME DIVEQ expression .) ]
  ! [               [ reduce using rule 36 (expression -> NAME DIVEQ expression .) ]


state 58

    (3) statementblock -> { statementlist } .

    }               reduce using rule 3 (statementblock -> { statementlist } .)
    {               reduce using rule 3 (statementblock -> { statementlist } .)
    WHILE           reduce using rule 3 (statementblock -> { statementlist } .)
    IF              reduce using rule 3 (statementblock -> { statementlist } .)
    FOR             reduce using rule 3 (statementblock -> { statementlist } .)
    FILTERON        reduce using rule 3 (statementblock -> { statementlist } .)
    MINUS           reduce using rule 3 (statementblock -> { statementlist } .)
    (               reduce using rule 3 (statementblock -> { statementlist } .)
    BOOL            reduce using rule 3 (statementblock -> { statementlist } .)
    NUMBER          reduce using rule 3 (statementblock -> { statementlist } .)
    STRING          reduce using rule 3 (statementblock -> { statementlist } .)
    OBSERVATION     reduce using rule 3 (statementblock -> { statementlist } .)
    NAME            reduce using rule 3 (statementblock -> { statementlist } .)
    TEST            reduce using rule 3 (statementblock -> { statementlist } .)
    $end            reduce using rule 3 (statementblock -> { statementlist } .)


state 59

    (19) expression -> expression GEQ expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 19 (expression -> expression GEQ expression .)
    )               reduce using rule 19 (expression -> expression GEQ expression .)
    ]               reduce using rule 19 (expression -> expression GEQ expression .)
    {               reduce using rule 19 (expression -> expression GEQ expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44

  ! PLUS            [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! IN              [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! EQ              [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! NEQ             [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! GEQ             [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! LEQ             [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! SG              [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! SL              [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! POWER           [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! [               [ reduce using rule 19 (expression -> expression GEQ expression .) ]


state 60

    (15) expression -> expression DIVIDE expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    PLUS            reduce using rule 15 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 15 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 15 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 15 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 15 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 15 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 15 (expression -> expression DIVIDE expression .)
    GEQ             reduce using rule 15 (expression -> expression DIVIDE expression .)
    LEQ             reduce using rule 15 (expression -> expression DIVIDE expression .)
    SG              reduce using rule 15 (expression -> expression DIVIDE expression .)
    SL              reduce using rule 15 (expression -> expression DIVIDE expression .)
    POWER           reduce using rule 15 (expression -> expression DIVIDE expression .)
    [               reduce using rule 15 (expression -> expression DIVIDE expression .)
    ;               reduce using rule 15 (expression -> expression DIVIDE expression .)
    )               reduce using rule 15 (expression -> expression DIVIDE expression .)
    ]               reduce using rule 15 (expression -> expression DIVIDE expression .)
    {               reduce using rule 15 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 45 ]
  ! MULTIPLY        [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! IN              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 37 ]
  ! NEQ             [ shift and go to state 46 ]
  ! GEQ             [ shift and go to state 34 ]
  ! LEQ             [ shift and go to state 39 ]
  ! SG              [ shift and go to state 43 ]
  ! SL              [ shift and go to state 38 ]
  ! POWER           [ shift and go to state 36 ]
  ! [               [ shift and go to state 44 ]


state 61

    (23) expression -> expression POWER expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 23 (expression -> expression POWER expression .)
    )               reduce using rule 23 (expression -> expression POWER expression .)
    ]               reduce using rule 23 (expression -> expression POWER expression .)
    {               reduce using rule 23 (expression -> expression POWER expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44

  ! PLUS            [ reduce using rule 23 (expression -> expression POWER expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression POWER expression .) ]
  ! MULTIPLY        [ reduce using rule 23 (expression -> expression POWER expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression POWER expression .) ]
  ! IN              [ reduce using rule 23 (expression -> expression POWER expression .) ]
  ! EQ              [ reduce using rule 23 (expression -> expression POWER expression .) ]
  ! NEQ             [ reduce using rule 23 (expression -> expression POWER expression .) ]
  ! GEQ             [ reduce using rule 23 (expression -> expression POWER expression .) ]
  ! LEQ             [ reduce using rule 23 (expression -> expression POWER expression .) ]
  ! SG              [ reduce using rule 23 (expression -> expression POWER expression .) ]
  ! SL              [ reduce using rule 23 (expression -> expression POWER expression .) ]
  ! POWER           [ reduce using rule 23 (expression -> expression POWER expression .) ]
  ! [               [ reduce using rule 23 (expression -> expression POWER expression .) ]


state 62

    (17) expression -> expression EQ expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 17 (expression -> expression EQ expression .)
    )               reduce using rule 17 (expression -> expression EQ expression .)
    ]               reduce using rule 17 (expression -> expression EQ expression .)
    {               reduce using rule 17 (expression -> expression EQ expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44

  ! PLUS            [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! IN              [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! GEQ             [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! LEQ             [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! SG              [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! SL              [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! POWER           [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! [               [ reduce using rule 17 (expression -> expression EQ expression .) ]


state 63

    (22) expression -> expression SL expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 22 (expression -> expression SL expression .)
    )               reduce using rule 22 (expression -> expression SL expression .)
    ]               reduce using rule 22 (expression -> expression SL expression .)
    {               reduce using rule 22 (expression -> expression SL expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44

  ! PLUS            [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! MULTIPLY        [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! IN              [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! EQ              [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! NEQ             [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! GEQ             [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! LEQ             [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! SG              [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! SL              [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! POWER           [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! [               [ reduce using rule 22 (expression -> expression SL expression .) ]


state 64

    (20) expression -> expression LEQ expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 20 (expression -> expression LEQ expression .)
    )               reduce using rule 20 (expression -> expression LEQ expression .)
    ]               reduce using rule 20 (expression -> expression LEQ expression .)
    {               reduce using rule 20 (expression -> expression LEQ expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44

  ! PLUS            [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! IN              [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! EQ              [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! NEQ             [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! GEQ             [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! LEQ             [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! SG              [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! SL              [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! POWER           [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! [               [ reduce using rule 20 (expression -> expression LEQ expression .) ]


state 65

    (12) expression -> expression PLUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    PLUS            reduce using rule 12 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 12 (expression -> expression PLUS expression .)
    IN              reduce using rule 12 (expression -> expression PLUS expression .)
    EQ              reduce using rule 12 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 12 (expression -> expression PLUS expression .)
    GEQ             reduce using rule 12 (expression -> expression PLUS expression .)
    LEQ             reduce using rule 12 (expression -> expression PLUS expression .)
    SG              reduce using rule 12 (expression -> expression PLUS expression .)
    SL              reduce using rule 12 (expression -> expression PLUS expression .)
    POWER           reduce using rule 12 (expression -> expression PLUS expression .)
    [               reduce using rule 12 (expression -> expression PLUS expression .)
    ;               reduce using rule 12 (expression -> expression PLUS expression .)
    )               reduce using rule 12 (expression -> expression PLUS expression .)
    ]               reduce using rule 12 (expression -> expression PLUS expression .)
    {               reduce using rule 12 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35

  ! MULTIPLY        [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 45 ]
  ! IN              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 37 ]
  ! NEQ             [ shift and go to state 46 ]
  ! GEQ             [ shift and go to state 34 ]
  ! LEQ             [ shift and go to state 39 ]
  ! SG              [ shift and go to state 43 ]
  ! SL              [ shift and go to state 38 ]
  ! POWER           [ shift and go to state 36 ]
  ! [               [ shift and go to state 44 ]


state 66

    (16) expression -> expression IN expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 16 (expression -> expression IN expression .)
    )               reduce using rule 16 (expression -> expression IN expression .)
    ]               reduce using rule 16 (expression -> expression IN expression .)
    {               reduce using rule 16 (expression -> expression IN expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44

  ! PLUS            [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! MULTIPLY        [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! IN              [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! EQ              [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! NEQ             [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! GEQ             [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! LEQ             [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! SG              [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! SL              [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! POWER           [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! [               [ reduce using rule 16 (expression -> expression IN expression .) ]


state 67

    (14) expression -> expression MULTIPLY expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    PLUS            reduce using rule 14 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 14 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 14 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 14 (expression -> expression MULTIPLY expression .)
    IN              reduce using rule 14 (expression -> expression MULTIPLY expression .)
    EQ              reduce using rule 14 (expression -> expression MULTIPLY expression .)
    NEQ             reduce using rule 14 (expression -> expression MULTIPLY expression .)
    GEQ             reduce using rule 14 (expression -> expression MULTIPLY expression .)
    LEQ             reduce using rule 14 (expression -> expression MULTIPLY expression .)
    SG              reduce using rule 14 (expression -> expression MULTIPLY expression .)
    SL              reduce using rule 14 (expression -> expression MULTIPLY expression .)
    POWER           reduce using rule 14 (expression -> expression MULTIPLY expression .)
    [               reduce using rule 14 (expression -> expression MULTIPLY expression .)
    ;               reduce using rule 14 (expression -> expression MULTIPLY expression .)
    )               reduce using rule 14 (expression -> expression MULTIPLY expression .)
    ]               reduce using rule 14 (expression -> expression MULTIPLY expression .)
    {               reduce using rule 14 (expression -> expression MULTIPLY expression .)

  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 45 ]
  ! MULTIPLY        [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! IN              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 37 ]
  ! NEQ             [ shift and go to state 46 ]
  ! GEQ             [ shift and go to state 34 ]
  ! LEQ             [ shift and go to state 39 ]
  ! SG              [ shift and go to state 43 ]
  ! SL              [ shift and go to state 38 ]
  ! POWER           [ shift and go to state 36 ]
  ! [               [ shift and go to state 44 ]


state 68

    (21) expression -> expression SG expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 21 (expression -> expression SG expression .)
    )               reduce using rule 21 (expression -> expression SG expression .)
    ]               reduce using rule 21 (expression -> expression SG expression .)
    {               reduce using rule 21 (expression -> expression SG expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44

  ! PLUS            [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! MULTIPLY        [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! IN              [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! EQ              [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! NEQ             [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! GEQ             [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! LEQ             [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! SG              [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! SL              [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! POWER           [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! [               [ reduce using rule 21 (expression -> expression SG expression .) ]


state 69

    (26) expression -> expression [ expression . ]
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    ]               shift and go to state 77
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44


state 70

    (13) expression -> expression MINUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    PLUS            reduce using rule 13 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 13 (expression -> expression MINUS expression .)
    IN              reduce using rule 13 (expression -> expression MINUS expression .)
    EQ              reduce using rule 13 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 13 (expression -> expression MINUS expression .)
    GEQ             reduce using rule 13 (expression -> expression MINUS expression .)
    LEQ             reduce using rule 13 (expression -> expression MINUS expression .)
    SG              reduce using rule 13 (expression -> expression MINUS expression .)
    SL              reduce using rule 13 (expression -> expression MINUS expression .)
    POWER           reduce using rule 13 (expression -> expression MINUS expression .)
    [               reduce using rule 13 (expression -> expression MINUS expression .)
    ;               reduce using rule 13 (expression -> expression MINUS expression .)
    )               reduce using rule 13 (expression -> expression MINUS expression .)
    ]               reduce using rule 13 (expression -> expression MINUS expression .)
    {               reduce using rule 13 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35

  ! MULTIPLY        [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 45 ]
  ! IN              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 37 ]
  ! NEQ             [ shift and go to state 46 ]
  ! GEQ             [ shift and go to state 34 ]
  ! LEQ             [ shift and go to state 39 ]
  ! SG              [ shift and go to state 43 ]
  ! SL              [ shift and go to state 38 ]
  ! POWER           [ shift and go to state 36 ]
  ! [               [ shift and go to state 44 ]


state 71

    (18) expression -> expression NEQ expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 18 (expression -> expression NEQ expression .)
    )               reduce using rule 18 (expression -> expression NEQ expression .)
    ]               reduce using rule 18 (expression -> expression NEQ expression .)
    {               reduce using rule 18 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44

  ! PLUS            [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! IN              [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! GEQ             [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! LEQ             [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! SG              [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! SL              [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! POWER           [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! [               [ reduce using rule 18 (expression -> expression NEQ expression .) ]


state 72

    (4) statementblock -> WHILE ( expression ) . { statementblock }

    {               shift and go to state 78


state 73

    (8) statementblock -> FOR NAME IN expression . { statementblock }
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    {               shift and go to state 79
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44


state 74

    (7) statementblock -> FOR ( expression ; . expression ; expression ) { statementblock }
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 80

state 75

    (5) statementblock -> IF ( expression ) . { statementblock }
    (6) statementblock -> IF ( expression ) . { statementblock } ELSE { statementblock }

    {               shift and go to state 81


state 76

    (31) expression -> NAME ( expression ) .

    PLUS            reduce using rule 31 (expression -> NAME ( expression ) .)
    MINUS           reduce using rule 31 (expression -> NAME ( expression ) .)
    MULTIPLY        reduce using rule 31 (expression -> NAME ( expression ) .)
    DIVIDE          reduce using rule 31 (expression -> NAME ( expression ) .)
    IN              reduce using rule 31 (expression -> NAME ( expression ) .)
    EQ              reduce using rule 31 (expression -> NAME ( expression ) .)
    NEQ             reduce using rule 31 (expression -> NAME ( expression ) .)
    GEQ             reduce using rule 31 (expression -> NAME ( expression ) .)
    LEQ             reduce using rule 31 (expression -> NAME ( expression ) .)
    SG              reduce using rule 31 (expression -> NAME ( expression ) .)
    SL              reduce using rule 31 (expression -> NAME ( expression ) .)
    POWER           reduce using rule 31 (expression -> NAME ( expression ) .)
    [               reduce using rule 31 (expression -> NAME ( expression ) .)
    ;               reduce using rule 31 (expression -> NAME ( expression ) .)
    )               reduce using rule 31 (expression -> NAME ( expression ) .)
    ]               reduce using rule 31 (expression -> NAME ( expression ) .)
    {               reduce using rule 31 (expression -> NAME ( expression ) .)


state 77

    (26) expression -> expression [ expression ] .

    PLUS            reduce using rule 26 (expression -> expression [ expression ] .)
    MINUS           reduce using rule 26 (expression -> expression [ expression ] .)
    MULTIPLY        reduce using rule 26 (expression -> expression [ expression ] .)
    DIVIDE          reduce using rule 26 (expression -> expression [ expression ] .)
    IN              reduce using rule 26 (expression -> expression [ expression ] .)
    EQ              reduce using rule 26 (expression -> expression [ expression ] .)
    NEQ             reduce using rule 26 (expression -> expression [ expression ] .)
    GEQ             reduce using rule 26 (expression -> expression [ expression ] .)
    LEQ             reduce using rule 26 (expression -> expression [ expression ] .)
    SG              reduce using rule 26 (expression -> expression [ expression ] .)
    SL              reduce using rule 26 (expression -> expression [ expression ] .)
    POWER           reduce using rule 26 (expression -> expression [ expression ] .)
    [               reduce using rule 26 (expression -> expression [ expression ] .)
    ;               reduce using rule 26 (expression -> expression [ expression ] .)
    )               reduce using rule 26 (expression -> expression [ expression ] .)
    ]               reduce using rule 26 (expression -> expression [ expression ] .)
    {               reduce using rule 26 (expression -> expression [ expression ] .)


state 78

    (4) statementblock -> WHILE ( expression ) { . statementblock }
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 82
    expression                     shift and go to state 17
    statement                      shift and go to state 8

state 79

    (8) statementblock -> FOR NAME IN expression { . statementblock }
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 83
    expression                     shift and go to state 17
    statement                      shift and go to state 8

state 80

    (7) statementblock -> FOR ( expression ; expression . ; expression ) { statementblock }
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    ;               shift and go to state 84
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44


state 81

    (5) statementblock -> IF ( expression ) { . statementblock }
    (6) statementblock -> IF ( expression ) { . statementblock } ELSE { statementblock }
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 85
    expression                     shift and go to state 17
    statement                      shift and go to state 8

state 82

    (4) statementblock -> WHILE ( expression ) { statementblock . }

    }               shift and go to state 86


state 83

    (8) statementblock -> FOR NAME IN expression { statementblock . }

    }               shift and go to state 87


state 84

    (7) statementblock -> FOR ( expression ; expression ; . expression ) { statementblock }
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 88

state 85

    (5) statementblock -> IF ( expression ) { statementblock . }
    (6) statementblock -> IF ( expression ) { statementblock . } ELSE { statementblock }

    }               shift and go to state 89


state 86

    (4) statementblock -> WHILE ( expression ) { statementblock } .

    }               reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    {               reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    WHILE           reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    IF              reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    FOR             reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    FILTERON        reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    MINUS           reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    (               reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    BOOL            reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    NUMBER          reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    STRING          reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    OBSERVATION     reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    NAME            reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    TEST            reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    $end            reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)


state 87

    (8) statementblock -> FOR NAME IN expression { statementblock } .

    }               reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    {               reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    WHILE           reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    IF              reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    FOR             reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    FILTERON        reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    MINUS           reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    (               reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    BOOL            reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    NUMBER          reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    STRING          reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    OBSERVATION     reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    NAME            reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    TEST            reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    $end            reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)


state 88

    (7) statementblock -> FOR ( expression ; expression ; expression . ) { statementblock }
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . MULTIPLY expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (23) expression -> expression . POWER expression
    (26) expression -> expression . [ expression ]

    )               shift and go to state 90
    PLUS            shift and go to state 40
    MINUS           shift and go to state 45
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 35
    IN              shift and go to state 41
    EQ              shift and go to state 37
    NEQ             shift and go to state 46
    GEQ             shift and go to state 34
    LEQ             shift and go to state 39
    SG              shift and go to state 43
    SL              shift and go to state 38
    POWER           shift and go to state 36
    [               shift and go to state 44


state 89

    (5) statementblock -> IF ( expression ) { statementblock } .
    (6) statementblock -> IF ( expression ) { statementblock } . ELSE { statementblock }

    }               reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    {               reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    WHILE           reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    IF              reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    FOR             reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    FILTERON        reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    MINUS           reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    (               reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    BOOL            reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    NUMBER          reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    STRING          reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    OBSERVATION     reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    NAME            reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    TEST            reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    $end            reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    ELSE            shift and go to state 91


state 90

    (7) statementblock -> FOR ( expression ; expression ; expression ) . { statementblock }

    {               shift and go to state 92


state 91

    (6) statementblock -> IF ( expression ) { statementblock } ELSE . { statementblock }

    {               shift and go to state 93


state 92

    (7) statementblock -> FOR ( expression ; expression ; expression ) { . statementblock }
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 94
    expression                     shift and go to state 17
    statement                      shift and go to state 8

state 93

    (6) statementblock -> IF ( expression ) { statementblock } ELSE { . statementblock }
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression MULTIPLY expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . expression POWER expression
    (24) expression -> . MINUS expression
    (25) expression -> . ( expression )
    (26) expression -> . expression [ expression ]
    (27) expression -> . BOOL
    (28) expression -> . NUMBER
    (29) expression -> . STRING
    (30) expression -> . OBSERVATION
    (31) expression -> . NAME ( expression )
    (32) expression -> . NAME ASSIGN expression
    (33) expression -> . NAME PLUSEQ expression
    (34) expression -> . NAME MINEQ expression
    (35) expression -> . NAME MULEQ expression
    (36) expression -> . NAME DIVEQ expression
    (37) expression -> . NAME
    (38) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    MINUS           shift and go to state 6
    (               shift and go to state 7
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 95
    expression                     shift and go to state 17
    statement                      shift and go to state 8

state 94

    (7) statementblock -> FOR ( expression ; expression ; expression ) { statementblock . }

    }               shift and go to state 96


state 95

    (6) statementblock -> IF ( expression ) { statementblock } ELSE { statementblock . }

    }               shift and go to state 97


state 96

    (7) statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .

    }               reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    {               reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    WHILE           reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    IF              reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    FOR             reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    FILTERON        reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    MINUS           reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    (               reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    BOOL            reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    NUMBER          reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    STRING          reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    OBSERVATION     reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    NAME            reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    TEST            reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    $end            reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)


state 97

    (6) statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .

    }               reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    {               reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    WHILE           reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    IF              reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    FOR             reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    FILTERON        reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    MINUS           reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    (               reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    BOOL            reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    NUMBER          reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    STRING          reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    OBSERVATION     reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    NAME            reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    TEST            reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    $end            reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 53 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 53 resolved as shift
WARNING: shift/reduce conflict for IN in state 53 resolved as shift
WARNING: shift/reduce conflict for EQ in state 53 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 53 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 53 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 53 resolved as shift
WARNING: shift/reduce conflict for SG in state 53 resolved as shift
WARNING: shift/reduce conflict for SL in state 53 resolved as shift
WARNING: shift/reduce conflict for POWER in state 53 resolved as shift
WARNING: shift/reduce conflict for [ in state 53 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for IN in state 54 resolved as shift
WARNING: shift/reduce conflict for EQ in state 54 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 54 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 54 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 54 resolved as shift
WARNING: shift/reduce conflict for SG in state 54 resolved as shift
WARNING: shift/reduce conflict for SL in state 54 resolved as shift
WARNING: shift/reduce conflict for POWER in state 54 resolved as shift
WARNING: shift/reduce conflict for [ in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 55 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 55 resolved as shift
WARNING: shift/reduce conflict for IN in state 55 resolved as shift
WARNING: shift/reduce conflict for EQ in state 55 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 55 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 55 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 55 resolved as shift
WARNING: shift/reduce conflict for SG in state 55 resolved as shift
WARNING: shift/reduce conflict for SL in state 55 resolved as shift
WARNING: shift/reduce conflict for POWER in state 55 resolved as shift
WARNING: shift/reduce conflict for [ in state 55 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
WARNING: shift/reduce conflict for IN in state 56 resolved as shift
WARNING: shift/reduce conflict for EQ in state 56 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 56 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 56 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 56 resolved as shift
WARNING: shift/reduce conflict for SG in state 56 resolved as shift
WARNING: shift/reduce conflict for SL in state 56 resolved as shift
WARNING: shift/reduce conflict for POWER in state 56 resolved as shift
WARNING: shift/reduce conflict for [ in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for IN in state 57 resolved as shift
WARNING: shift/reduce conflict for EQ in state 57 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 57 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 57 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 57 resolved as shift
WARNING: shift/reduce conflict for SG in state 57 resolved as shift
WARNING: shift/reduce conflict for SL in state 57 resolved as shift
WARNING: shift/reduce conflict for POWER in state 57 resolved as shift
WARNING: shift/reduce conflict for [ in state 57 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 59 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 59 resolved as shift
WARNING: shift/reduce conflict for IN in state 59 resolved as shift
WARNING: shift/reduce conflict for EQ in state 59 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 59 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 59 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 59 resolved as shift
WARNING: shift/reduce conflict for SG in state 59 resolved as shift
WARNING: shift/reduce conflict for SL in state 59 resolved as shift
WARNING: shift/reduce conflict for POWER in state 59 resolved as shift
WARNING: shift/reduce conflict for [ in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 61 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 61 resolved as shift
WARNING: shift/reduce conflict for IN in state 61 resolved as shift
WARNING: shift/reduce conflict for EQ in state 61 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for SG in state 61 resolved as shift
WARNING: shift/reduce conflict for SL in state 61 resolved as shift
WARNING: shift/reduce conflict for POWER in state 61 resolved as shift
WARNING: shift/reduce conflict for [ in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for IN in state 62 resolved as shift
WARNING: shift/reduce conflict for EQ in state 62 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 62 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 62 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 62 resolved as shift
WARNING: shift/reduce conflict for SG in state 62 resolved as shift
WARNING: shift/reduce conflict for SL in state 62 resolved as shift
WARNING: shift/reduce conflict for POWER in state 62 resolved as shift
WARNING: shift/reduce conflict for [ in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for IN in state 63 resolved as shift
WARNING: shift/reduce conflict for EQ in state 63 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 63 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 63 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 63 resolved as shift
WARNING: shift/reduce conflict for SG in state 63 resolved as shift
WARNING: shift/reduce conflict for SL in state 63 resolved as shift
WARNING: shift/reduce conflict for POWER in state 63 resolved as shift
WARNING: shift/reduce conflict for [ in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for IN in state 64 resolved as shift
WARNING: shift/reduce conflict for EQ in state 64 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 64 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 64 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 64 resolved as shift
WARNING: shift/reduce conflict for SG in state 64 resolved as shift
WARNING: shift/reduce conflict for SL in state 64 resolved as shift
WARNING: shift/reduce conflict for POWER in state 64 resolved as shift
WARNING: shift/reduce conflict for [ in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 66 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 66 resolved as shift
WARNING: shift/reduce conflict for IN in state 66 resolved as shift
WARNING: shift/reduce conflict for EQ in state 66 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 66 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 66 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 66 resolved as shift
WARNING: shift/reduce conflict for SG in state 66 resolved as shift
WARNING: shift/reduce conflict for SL in state 66 resolved as shift
WARNING: shift/reduce conflict for POWER in state 66 resolved as shift
WARNING: shift/reduce conflict for [ in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 68 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 68 resolved as shift
WARNING: shift/reduce conflict for IN in state 68 resolved as shift
WARNING: shift/reduce conflict for EQ in state 68 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 68 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 68 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 68 resolved as shift
WARNING: shift/reduce conflict for SG in state 68 resolved as shift
WARNING: shift/reduce conflict for SL in state 68 resolved as shift
WARNING: shift/reduce conflict for POWER in state 68 resolved as shift
WARNING: shift/reduce conflict for [ in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for IN in state 71 resolved as shift
WARNING: shift/reduce conflict for EQ in state 71 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for SG in state 71 resolved as shift
WARNING: shift/reduce conflict for SL in state 71 resolved as shift
WARNING: shift/reduce conflict for POWER in state 71 resolved as shift
WARNING: shift/reduce conflict for [ in state 71 resolved as shift

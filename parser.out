Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statementlist
Rule 1     statementlist -> statementlist statementblock
Rule 2     statementlist -> statementblock
Rule 3     statementblock -> { statementlist }
Rule 4     statementblock -> WHILE ( expression ) { statementblock }
Rule 5     statementblock -> IF ( expression ) { statementblock }
Rule 6     statementblock -> IF ( expression ) { statementblock } ELSE { statementblock }
Rule 7     statementblock -> FOR ( expression ; expression ; expression ) { statementblock }
Rule 8     statementblock -> FOR NAME IN expression { statementblock }
Rule 9     statementblock -> statement ;
Rule 10    statement -> FILTERON expression
Rule 11    statement -> expression
Rule 12    expression -> expression + expression
Rule 13    expression -> expression - expression
Rule 14    expression -> expression * expression
Rule 15    expression -> expression / expression
Rule 16    expression -> expression IN expression
Rule 17    expression -> expression EQ expression
Rule 18    expression -> expression NEQ expression
Rule 19    expression -> expression GEQ expression
Rule 20    expression -> expression LEQ expression
Rule 21    expression -> expression SG expression
Rule 22    expression -> expression SL expression
Rule 23    expression -> - expression
Rule 24    expression -> ( expression )
Rule 25    expression -> expression [ expression ]
Rule 26    expression -> BOOL
Rule 27    expression -> NUMBER
Rule 28    expression -> STRING
Rule 29    expression -> OBSERVATION
Rule 30    expression -> NAME ASSIGN expression
Rule 31    expression -> NAME
Rule 32    expression -> TEST

Terminals, with rules where they appear

(                    : 4 5 6 7 24
)                    : 4 5 6 7 24
*                    : 14
+                    : 12
-                    : 13 23
/                    : 15
;                    : 7 7 9
ASSIGN               : 30
BOOL                 : 26
ELSE                 : 6
EQ                   : 17
FILTERON             : 10
FOR                  : 7 8
GEQ                  : 19
IF                   : 5 6
IN                   : 8 16
LEQ                  : 20
NAME                 : 8 30 31
NEQ                  : 18
NUMBER               : 27
OBSERVATION          : 29
SG                   : 21
SL                   : 22
STRING               : 28
TEST                 : 32
WHILE                : 4
[                    : 25
]                    : 25
error                : 
{                    : 3 4 5 6 6 7 8
}                    : 3 4 5 6 6 7 8

Nonterminals, with rules where they appear

expression           : 4 5 6 7 7 7 8 10 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 24 25 25 30
statement            : 9
statementblock       : 1 2 4 5 6 6 7 8
statementlist        : 1 3 0

Parsing method: LALR

state 0

    (0) S' -> . statementlist
    (1) statementlist -> . statementlist statementblock
    (2) statementlist -> . statementblock
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 11
    expression                     shift and go to state 17
    statement                      shift and go to state 7
    statementlist                  shift and go to state 3

state 1

    (10) statement -> FILTERON . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 18

state 2

    (27) expression -> NUMBER .

    +               reduce using rule 27 (expression -> NUMBER .)
    -               reduce using rule 27 (expression -> NUMBER .)
    *               reduce using rule 27 (expression -> NUMBER .)
    /               reduce using rule 27 (expression -> NUMBER .)
    IN              reduce using rule 27 (expression -> NUMBER .)
    EQ              reduce using rule 27 (expression -> NUMBER .)
    NEQ             reduce using rule 27 (expression -> NUMBER .)
    GEQ             reduce using rule 27 (expression -> NUMBER .)
    LEQ             reduce using rule 27 (expression -> NUMBER .)
    SG              reduce using rule 27 (expression -> NUMBER .)
    SL              reduce using rule 27 (expression -> NUMBER .)
    [               reduce using rule 27 (expression -> NUMBER .)
    ;               reduce using rule 27 (expression -> NUMBER .)
    )               reduce using rule 27 (expression -> NUMBER .)
    ]               reduce using rule 27 (expression -> NUMBER .)
    {               reduce using rule 27 (expression -> NUMBER .)


state 3

    (0) S' -> statementlist .
    (1) statementlist -> statementlist . statementblock
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 19
    expression                     shift and go to state 17
    statement                      shift and go to state 7

state 4

    (4) statementblock -> WHILE . ( expression ) { statementblock }

    (               shift and go to state 20


state 5

    (24) expression -> ( . expression )
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 21

state 6

    (23) expression -> - . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 22

state 7

    (9) statementblock -> statement . ;

    ;               shift and go to state 23


state 8

    (28) expression -> STRING .

    +               reduce using rule 28 (expression -> STRING .)
    -               reduce using rule 28 (expression -> STRING .)
    *               reduce using rule 28 (expression -> STRING .)
    /               reduce using rule 28 (expression -> STRING .)
    IN              reduce using rule 28 (expression -> STRING .)
    EQ              reduce using rule 28 (expression -> STRING .)
    NEQ             reduce using rule 28 (expression -> STRING .)
    GEQ             reduce using rule 28 (expression -> STRING .)
    LEQ             reduce using rule 28 (expression -> STRING .)
    SG              reduce using rule 28 (expression -> STRING .)
    SL              reduce using rule 28 (expression -> STRING .)
    [               reduce using rule 28 (expression -> STRING .)
    ;               reduce using rule 28 (expression -> STRING .)
    )               reduce using rule 28 (expression -> STRING .)
    ]               reduce using rule 28 (expression -> STRING .)
    {               reduce using rule 28 (expression -> STRING .)


state 9

    (7) statementblock -> FOR . ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> FOR . NAME IN expression { statementblock }

    (               shift and go to state 25
    NAME            shift and go to state 24


state 10

    (5) statementblock -> IF . ( expression ) { statementblock }
    (6) statementblock -> IF . ( expression ) { statementblock } ELSE { statementblock }

    (               shift and go to state 26


state 11

    (2) statementlist -> statementblock .

    {               reduce using rule 2 (statementlist -> statementblock .)
    WHILE           reduce using rule 2 (statementlist -> statementblock .)
    IF              reduce using rule 2 (statementlist -> statementblock .)
    FOR             reduce using rule 2 (statementlist -> statementblock .)
    FILTERON        reduce using rule 2 (statementlist -> statementblock .)
    -               reduce using rule 2 (statementlist -> statementblock .)
    (               reduce using rule 2 (statementlist -> statementblock .)
    BOOL            reduce using rule 2 (statementlist -> statementblock .)
    NUMBER          reduce using rule 2 (statementlist -> statementblock .)
    STRING          reduce using rule 2 (statementlist -> statementblock .)
    OBSERVATION     reduce using rule 2 (statementlist -> statementblock .)
    NAME            reduce using rule 2 (statementlist -> statementblock .)
    TEST            reduce using rule 2 (statementlist -> statementblock .)
    $end            reduce using rule 2 (statementlist -> statementblock .)
    }               reduce using rule 2 (statementlist -> statementblock .)


state 12

    (30) expression -> NAME . ASSIGN expression
    (31) expression -> NAME .

    ASSIGN          shift and go to state 27
    +               reduce using rule 31 (expression -> NAME .)
    -               reduce using rule 31 (expression -> NAME .)
    *               reduce using rule 31 (expression -> NAME .)
    /               reduce using rule 31 (expression -> NAME .)
    IN              reduce using rule 31 (expression -> NAME .)
    EQ              reduce using rule 31 (expression -> NAME .)
    NEQ             reduce using rule 31 (expression -> NAME .)
    GEQ             reduce using rule 31 (expression -> NAME .)
    LEQ             reduce using rule 31 (expression -> NAME .)
    SG              reduce using rule 31 (expression -> NAME .)
    SL              reduce using rule 31 (expression -> NAME .)
    [               reduce using rule 31 (expression -> NAME .)
    ;               reduce using rule 31 (expression -> NAME .)
    )               reduce using rule 31 (expression -> NAME .)
    ]               reduce using rule 31 (expression -> NAME .)
    {               reduce using rule 31 (expression -> NAME .)


state 13

    (29) expression -> OBSERVATION .

    +               reduce using rule 29 (expression -> OBSERVATION .)
    -               reduce using rule 29 (expression -> OBSERVATION .)
    *               reduce using rule 29 (expression -> OBSERVATION .)
    /               reduce using rule 29 (expression -> OBSERVATION .)
    IN              reduce using rule 29 (expression -> OBSERVATION .)
    EQ              reduce using rule 29 (expression -> OBSERVATION .)
    NEQ             reduce using rule 29 (expression -> OBSERVATION .)
    GEQ             reduce using rule 29 (expression -> OBSERVATION .)
    LEQ             reduce using rule 29 (expression -> OBSERVATION .)
    SG              reduce using rule 29 (expression -> OBSERVATION .)
    SL              reduce using rule 29 (expression -> OBSERVATION .)
    [               reduce using rule 29 (expression -> OBSERVATION .)
    ;               reduce using rule 29 (expression -> OBSERVATION .)
    )               reduce using rule 29 (expression -> OBSERVATION .)
    ]               reduce using rule 29 (expression -> OBSERVATION .)
    {               reduce using rule 29 (expression -> OBSERVATION .)


state 14

    (26) expression -> BOOL .

    +               reduce using rule 26 (expression -> BOOL .)
    -               reduce using rule 26 (expression -> BOOL .)
    *               reduce using rule 26 (expression -> BOOL .)
    /               reduce using rule 26 (expression -> BOOL .)
    IN              reduce using rule 26 (expression -> BOOL .)
    EQ              reduce using rule 26 (expression -> BOOL .)
    NEQ             reduce using rule 26 (expression -> BOOL .)
    GEQ             reduce using rule 26 (expression -> BOOL .)
    LEQ             reduce using rule 26 (expression -> BOOL .)
    SG              reduce using rule 26 (expression -> BOOL .)
    SL              reduce using rule 26 (expression -> BOOL .)
    [               reduce using rule 26 (expression -> BOOL .)
    ;               reduce using rule 26 (expression -> BOOL .)
    )               reduce using rule 26 (expression -> BOOL .)
    ]               reduce using rule 26 (expression -> BOOL .)
    {               reduce using rule 26 (expression -> BOOL .)


state 15

    (32) expression -> TEST .

    +               reduce using rule 32 (expression -> TEST .)
    -               reduce using rule 32 (expression -> TEST .)
    *               reduce using rule 32 (expression -> TEST .)
    /               reduce using rule 32 (expression -> TEST .)
    IN              reduce using rule 32 (expression -> TEST .)
    EQ              reduce using rule 32 (expression -> TEST .)
    NEQ             reduce using rule 32 (expression -> TEST .)
    GEQ             reduce using rule 32 (expression -> TEST .)
    LEQ             reduce using rule 32 (expression -> TEST .)
    SG              reduce using rule 32 (expression -> TEST .)
    SL              reduce using rule 32 (expression -> TEST .)
    [               reduce using rule 32 (expression -> TEST .)
    ;               reduce using rule 32 (expression -> TEST .)
    )               reduce using rule 32 (expression -> TEST .)
    ]               reduce using rule 32 (expression -> TEST .)
    {               reduce using rule 32 (expression -> TEST .)


state 16

    (3) statementblock -> { . statementlist }
    (1) statementlist -> . statementlist statementblock
    (2) statementlist -> . statementblock
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 11
    expression                     shift and go to state 17
    statement                      shift and go to state 7
    statementlist                  shift and go to state 28

state 17

    (11) statement -> expression .
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

    ;               reduce using rule 11 (statement -> expression .)
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39


state 18

    (10) statement -> FILTERON expression .
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

    ;               reduce using rule 10 (statement -> FILTERON expression .)
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39


state 19

    (1) statementlist -> statementlist statementblock .

    {               reduce using rule 1 (statementlist -> statementlist statementblock .)
    WHILE           reduce using rule 1 (statementlist -> statementlist statementblock .)
    IF              reduce using rule 1 (statementlist -> statementlist statementblock .)
    FOR             reduce using rule 1 (statementlist -> statementlist statementblock .)
    FILTERON        reduce using rule 1 (statementlist -> statementlist statementblock .)
    -               reduce using rule 1 (statementlist -> statementlist statementblock .)
    (               reduce using rule 1 (statementlist -> statementlist statementblock .)
    BOOL            reduce using rule 1 (statementlist -> statementlist statementblock .)
    NUMBER          reduce using rule 1 (statementlist -> statementlist statementblock .)
    STRING          reduce using rule 1 (statementlist -> statementlist statementblock .)
    OBSERVATION     reduce using rule 1 (statementlist -> statementlist statementblock .)
    NAME            reduce using rule 1 (statementlist -> statementlist statementblock .)
    TEST            reduce using rule 1 (statementlist -> statementlist statementblock .)
    $end            reduce using rule 1 (statementlist -> statementlist statementblock .)
    }               reduce using rule 1 (statementlist -> statementlist statementblock .)


state 20

    (4) statementblock -> WHILE ( . expression ) { statementblock }
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 41

state 21

    (24) expression -> ( expression . )
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

    )               shift and go to state 42
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39


state 22

    (23) expression -> - expression .
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

    +               reduce using rule 23 (expression -> - expression .)
    -               reduce using rule 23 (expression -> - expression .)
    *               reduce using rule 23 (expression -> - expression .)
    /               reduce using rule 23 (expression -> - expression .)
    IN              reduce using rule 23 (expression -> - expression .)
    EQ              reduce using rule 23 (expression -> - expression .)
    NEQ             reduce using rule 23 (expression -> - expression .)
    GEQ             reduce using rule 23 (expression -> - expression .)
    LEQ             reduce using rule 23 (expression -> - expression .)
    SG              reduce using rule 23 (expression -> - expression .)
    SL              reduce using rule 23 (expression -> - expression .)
    [               reduce using rule 23 (expression -> - expression .)
    ;               reduce using rule 23 (expression -> - expression .)
    )               reduce using rule 23 (expression -> - expression .)
    ]               reduce using rule 23 (expression -> - expression .)
    {               reduce using rule 23 (expression -> - expression .)

  ! +               [ shift and go to state 32 ]
  ! -               [ shift and go to state 34 ]
  ! *               [ shift and go to state 33 ]
  ! /               [ shift and go to state 35 ]
  ! IN              [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 31 ]
  ! NEQ             [ shift and go to state 40 ]
  ! GEQ             [ shift and go to state 29 ]
  ! LEQ             [ shift and go to state 36 ]
  ! SG              [ shift and go to state 38 ]
  ! SL              [ shift and go to state 30 ]
  ! [               [ shift and go to state 39 ]


state 23

    (9) statementblock -> statement ; .

    }               reduce using rule 9 (statementblock -> statement ; .)
    {               reduce using rule 9 (statementblock -> statement ; .)
    WHILE           reduce using rule 9 (statementblock -> statement ; .)
    IF              reduce using rule 9 (statementblock -> statement ; .)
    FOR             reduce using rule 9 (statementblock -> statement ; .)
    FILTERON        reduce using rule 9 (statementblock -> statement ; .)
    -               reduce using rule 9 (statementblock -> statement ; .)
    (               reduce using rule 9 (statementblock -> statement ; .)
    BOOL            reduce using rule 9 (statementblock -> statement ; .)
    NUMBER          reduce using rule 9 (statementblock -> statement ; .)
    STRING          reduce using rule 9 (statementblock -> statement ; .)
    OBSERVATION     reduce using rule 9 (statementblock -> statement ; .)
    NAME            reduce using rule 9 (statementblock -> statement ; .)
    TEST            reduce using rule 9 (statementblock -> statement ; .)
    $end            reduce using rule 9 (statementblock -> statement ; .)


state 24

    (8) statementblock -> FOR NAME . IN expression { statementblock }

    IN              shift and go to state 43


state 25

    (7) statementblock -> FOR ( . expression ; expression ; expression ) { statementblock }
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 44

state 26

    (5) statementblock -> IF ( . expression ) { statementblock }
    (6) statementblock -> IF ( . expression ) { statementblock } ELSE { statementblock }
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 45

state 27

    (30) expression -> NAME ASSIGN . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 46

state 28

    (3) statementblock -> { statementlist . }
    (1) statementlist -> statementlist . statementblock
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    }               shift and go to state 47
    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 19
    expression                     shift and go to state 17
    statement                      shift and go to state 7

state 29

    (19) expression -> expression GEQ . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 48

state 30

    (22) expression -> expression SL . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 49

state 31

    (17) expression -> expression EQ . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 50

state 32

    (12) expression -> expression + . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 51

state 33

    (14) expression -> expression * . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 52

state 34

    (13) expression -> expression - . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 53

state 35

    (15) expression -> expression / . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 54

state 36

    (20) expression -> expression LEQ . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 55

state 37

    (16) expression -> expression IN . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 56

state 38

    (21) expression -> expression SG . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 57

state 39

    (25) expression -> expression [ . expression ]
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 58

state 40

    (18) expression -> expression NEQ . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 59

state 41

    (4) statementblock -> WHILE ( expression . ) { statementblock }
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

    )               shift and go to state 60
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39


state 42

    (24) expression -> ( expression ) .

    +               reduce using rule 24 (expression -> ( expression ) .)
    -               reduce using rule 24 (expression -> ( expression ) .)
    *               reduce using rule 24 (expression -> ( expression ) .)
    /               reduce using rule 24 (expression -> ( expression ) .)
    IN              reduce using rule 24 (expression -> ( expression ) .)
    EQ              reduce using rule 24 (expression -> ( expression ) .)
    NEQ             reduce using rule 24 (expression -> ( expression ) .)
    GEQ             reduce using rule 24 (expression -> ( expression ) .)
    LEQ             reduce using rule 24 (expression -> ( expression ) .)
    SG              reduce using rule 24 (expression -> ( expression ) .)
    SL              reduce using rule 24 (expression -> ( expression ) .)
    [               reduce using rule 24 (expression -> ( expression ) .)
    ;               reduce using rule 24 (expression -> ( expression ) .)
    )               reduce using rule 24 (expression -> ( expression ) .)
    ]               reduce using rule 24 (expression -> ( expression ) .)
    {               reduce using rule 24 (expression -> ( expression ) .)


state 43

    (8) statementblock -> FOR NAME IN . expression { statementblock }
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 61

state 44

    (7) statementblock -> FOR ( expression . ; expression ; expression ) { statementblock }
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

    ;               shift and go to state 62
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39


state 45

    (5) statementblock -> IF ( expression . ) { statementblock }
    (6) statementblock -> IF ( expression . ) { statementblock } ELSE { statementblock }
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

    )               shift and go to state 63
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39


state 46

    (30) expression -> NAME ASSIGN expression .
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 30 (expression -> NAME ASSIGN expression .)
    )               reduce using rule 30 (expression -> NAME ASSIGN expression .)
    ]               reduce using rule 30 (expression -> NAME ASSIGN expression .)
    {               reduce using rule 30 (expression -> NAME ASSIGN expression .)
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39

  ! +               [ reduce using rule 30 (expression -> NAME ASSIGN expression .) ]
  ! -               [ reduce using rule 30 (expression -> NAME ASSIGN expression .) ]
  ! *               [ reduce using rule 30 (expression -> NAME ASSIGN expression .) ]
  ! /               [ reduce using rule 30 (expression -> NAME ASSIGN expression .) ]
  ! IN              [ reduce using rule 30 (expression -> NAME ASSIGN expression .) ]
  ! EQ              [ reduce using rule 30 (expression -> NAME ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 30 (expression -> NAME ASSIGN expression .) ]
  ! GEQ             [ reduce using rule 30 (expression -> NAME ASSIGN expression .) ]
  ! LEQ             [ reduce using rule 30 (expression -> NAME ASSIGN expression .) ]
  ! SG              [ reduce using rule 30 (expression -> NAME ASSIGN expression .) ]
  ! SL              [ reduce using rule 30 (expression -> NAME ASSIGN expression .) ]
  ! [               [ reduce using rule 30 (expression -> NAME ASSIGN expression .) ]


state 47

    (3) statementblock -> { statementlist } .

    }               reduce using rule 3 (statementblock -> { statementlist } .)
    {               reduce using rule 3 (statementblock -> { statementlist } .)
    WHILE           reduce using rule 3 (statementblock -> { statementlist } .)
    IF              reduce using rule 3 (statementblock -> { statementlist } .)
    FOR             reduce using rule 3 (statementblock -> { statementlist } .)
    FILTERON        reduce using rule 3 (statementblock -> { statementlist } .)
    -               reduce using rule 3 (statementblock -> { statementlist } .)
    (               reduce using rule 3 (statementblock -> { statementlist } .)
    BOOL            reduce using rule 3 (statementblock -> { statementlist } .)
    NUMBER          reduce using rule 3 (statementblock -> { statementlist } .)
    STRING          reduce using rule 3 (statementblock -> { statementlist } .)
    OBSERVATION     reduce using rule 3 (statementblock -> { statementlist } .)
    NAME            reduce using rule 3 (statementblock -> { statementlist } .)
    TEST            reduce using rule 3 (statementblock -> { statementlist } .)
    $end            reduce using rule 3 (statementblock -> { statementlist } .)


state 48

    (19) expression -> expression GEQ expression .
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 19 (expression -> expression GEQ expression .)
    )               reduce using rule 19 (expression -> expression GEQ expression .)
    ]               reduce using rule 19 (expression -> expression GEQ expression .)
    {               reduce using rule 19 (expression -> expression GEQ expression .)
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39

  ! +               [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! -               [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! *               [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! /               [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! IN              [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! EQ              [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! NEQ             [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! GEQ             [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! LEQ             [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! SG              [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! SL              [ reduce using rule 19 (expression -> expression GEQ expression .) ]
  ! [               [ reduce using rule 19 (expression -> expression GEQ expression .) ]


state 49

    (22) expression -> expression SL expression .
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 22 (expression -> expression SL expression .)
    )               reduce using rule 22 (expression -> expression SL expression .)
    ]               reduce using rule 22 (expression -> expression SL expression .)
    {               reduce using rule 22 (expression -> expression SL expression .)
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39

  ! +               [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! -               [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! *               [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! /               [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! IN              [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! EQ              [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! NEQ             [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! GEQ             [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! LEQ             [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! SG              [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! SL              [ reduce using rule 22 (expression -> expression SL expression .) ]
  ! [               [ reduce using rule 22 (expression -> expression SL expression .) ]


state 50

    (17) expression -> expression EQ expression .
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 17 (expression -> expression EQ expression .)
    )               reduce using rule 17 (expression -> expression EQ expression .)
    ]               reduce using rule 17 (expression -> expression EQ expression .)
    {               reduce using rule 17 (expression -> expression EQ expression .)
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39

  ! +               [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! -               [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! *               [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! /               [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! IN              [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! GEQ             [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! LEQ             [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! SG              [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! SL              [ reduce using rule 17 (expression -> expression EQ expression .) ]
  ! [               [ reduce using rule 17 (expression -> expression EQ expression .) ]


state 51

    (12) expression -> expression + expression .
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

    +               reduce using rule 12 (expression -> expression + expression .)
    -               reduce using rule 12 (expression -> expression + expression .)
    IN              reduce using rule 12 (expression -> expression + expression .)
    EQ              reduce using rule 12 (expression -> expression + expression .)
    NEQ             reduce using rule 12 (expression -> expression + expression .)
    GEQ             reduce using rule 12 (expression -> expression + expression .)
    LEQ             reduce using rule 12 (expression -> expression + expression .)
    SG              reduce using rule 12 (expression -> expression + expression .)
    SL              reduce using rule 12 (expression -> expression + expression .)
    [               reduce using rule 12 (expression -> expression + expression .)
    ;               reduce using rule 12 (expression -> expression + expression .)
    )               reduce using rule 12 (expression -> expression + expression .)
    ]               reduce using rule 12 (expression -> expression + expression .)
    {               reduce using rule 12 (expression -> expression + expression .)
    *               shift and go to state 33
    /               shift and go to state 35

  ! *               [ reduce using rule 12 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 12 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 32 ]
  ! -               [ shift and go to state 34 ]
  ! IN              [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 31 ]
  ! NEQ             [ shift and go to state 40 ]
  ! GEQ             [ shift and go to state 29 ]
  ! LEQ             [ shift and go to state 36 ]
  ! SG              [ shift and go to state 38 ]
  ! SL              [ shift and go to state 30 ]
  ! [               [ shift and go to state 39 ]


state 52

    (14) expression -> expression * expression .
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

    +               reduce using rule 14 (expression -> expression * expression .)
    -               reduce using rule 14 (expression -> expression * expression .)
    *               reduce using rule 14 (expression -> expression * expression .)
    /               reduce using rule 14 (expression -> expression * expression .)
    IN              reduce using rule 14 (expression -> expression * expression .)
    EQ              reduce using rule 14 (expression -> expression * expression .)
    NEQ             reduce using rule 14 (expression -> expression * expression .)
    GEQ             reduce using rule 14 (expression -> expression * expression .)
    LEQ             reduce using rule 14 (expression -> expression * expression .)
    SG              reduce using rule 14 (expression -> expression * expression .)
    SL              reduce using rule 14 (expression -> expression * expression .)
    [               reduce using rule 14 (expression -> expression * expression .)
    ;               reduce using rule 14 (expression -> expression * expression .)
    )               reduce using rule 14 (expression -> expression * expression .)
    ]               reduce using rule 14 (expression -> expression * expression .)
    {               reduce using rule 14 (expression -> expression * expression .)

  ! +               [ shift and go to state 32 ]
  ! -               [ shift and go to state 34 ]
  ! *               [ shift and go to state 33 ]
  ! /               [ shift and go to state 35 ]
  ! IN              [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 31 ]
  ! NEQ             [ shift and go to state 40 ]
  ! GEQ             [ shift and go to state 29 ]
  ! LEQ             [ shift and go to state 36 ]
  ! SG              [ shift and go to state 38 ]
  ! SL              [ shift and go to state 30 ]
  ! [               [ shift and go to state 39 ]


state 53

    (13) expression -> expression - expression .
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

    +               reduce using rule 13 (expression -> expression - expression .)
    -               reduce using rule 13 (expression -> expression - expression .)
    IN              reduce using rule 13 (expression -> expression - expression .)
    EQ              reduce using rule 13 (expression -> expression - expression .)
    NEQ             reduce using rule 13 (expression -> expression - expression .)
    GEQ             reduce using rule 13 (expression -> expression - expression .)
    LEQ             reduce using rule 13 (expression -> expression - expression .)
    SG              reduce using rule 13 (expression -> expression - expression .)
    SL              reduce using rule 13 (expression -> expression - expression .)
    [               reduce using rule 13 (expression -> expression - expression .)
    ;               reduce using rule 13 (expression -> expression - expression .)
    )               reduce using rule 13 (expression -> expression - expression .)
    ]               reduce using rule 13 (expression -> expression - expression .)
    {               reduce using rule 13 (expression -> expression - expression .)
    *               shift and go to state 33
    /               shift and go to state 35

  ! *               [ reduce using rule 13 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 13 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 32 ]
  ! -               [ shift and go to state 34 ]
  ! IN              [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 31 ]
  ! NEQ             [ shift and go to state 40 ]
  ! GEQ             [ shift and go to state 29 ]
  ! LEQ             [ shift and go to state 36 ]
  ! SG              [ shift and go to state 38 ]
  ! SL              [ shift and go to state 30 ]
  ! [               [ shift and go to state 39 ]


state 54

    (15) expression -> expression / expression .
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

    +               reduce using rule 15 (expression -> expression / expression .)
    -               reduce using rule 15 (expression -> expression / expression .)
    *               reduce using rule 15 (expression -> expression / expression .)
    /               reduce using rule 15 (expression -> expression / expression .)
    IN              reduce using rule 15 (expression -> expression / expression .)
    EQ              reduce using rule 15 (expression -> expression / expression .)
    NEQ             reduce using rule 15 (expression -> expression / expression .)
    GEQ             reduce using rule 15 (expression -> expression / expression .)
    LEQ             reduce using rule 15 (expression -> expression / expression .)
    SG              reduce using rule 15 (expression -> expression / expression .)
    SL              reduce using rule 15 (expression -> expression / expression .)
    [               reduce using rule 15 (expression -> expression / expression .)
    ;               reduce using rule 15 (expression -> expression / expression .)
    )               reduce using rule 15 (expression -> expression / expression .)
    ]               reduce using rule 15 (expression -> expression / expression .)
    {               reduce using rule 15 (expression -> expression / expression .)

  ! +               [ shift and go to state 32 ]
  ! -               [ shift and go to state 34 ]
  ! *               [ shift and go to state 33 ]
  ! /               [ shift and go to state 35 ]
  ! IN              [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 31 ]
  ! NEQ             [ shift and go to state 40 ]
  ! GEQ             [ shift and go to state 29 ]
  ! LEQ             [ shift and go to state 36 ]
  ! SG              [ shift and go to state 38 ]
  ! SL              [ shift and go to state 30 ]
  ! [               [ shift and go to state 39 ]


state 55

    (20) expression -> expression LEQ expression .
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 20 (expression -> expression LEQ expression .)
    )               reduce using rule 20 (expression -> expression LEQ expression .)
    ]               reduce using rule 20 (expression -> expression LEQ expression .)
    {               reduce using rule 20 (expression -> expression LEQ expression .)
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39

  ! +               [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! -               [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! *               [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! /               [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! IN              [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! EQ              [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! NEQ             [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! GEQ             [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! LEQ             [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! SG              [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! SL              [ reduce using rule 20 (expression -> expression LEQ expression .) ]
  ! [               [ reduce using rule 20 (expression -> expression LEQ expression .) ]


state 56

    (16) expression -> expression IN expression .
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 16 (expression -> expression IN expression .)
    )               reduce using rule 16 (expression -> expression IN expression .)
    ]               reduce using rule 16 (expression -> expression IN expression .)
    {               reduce using rule 16 (expression -> expression IN expression .)
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39

  ! +               [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! -               [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! *               [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! /               [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! IN              [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! EQ              [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! NEQ             [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! GEQ             [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! LEQ             [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! SG              [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! SL              [ reduce using rule 16 (expression -> expression IN expression .) ]
  ! [               [ reduce using rule 16 (expression -> expression IN expression .) ]


state 57

    (21) expression -> expression SG expression .
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 21 (expression -> expression SG expression .)
    )               reduce using rule 21 (expression -> expression SG expression .)
    ]               reduce using rule 21 (expression -> expression SG expression .)
    {               reduce using rule 21 (expression -> expression SG expression .)
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39

  ! +               [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! -               [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! *               [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! /               [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! IN              [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! EQ              [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! NEQ             [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! GEQ             [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! LEQ             [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! SG              [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! SL              [ reduce using rule 21 (expression -> expression SG expression .) ]
  ! [               [ reduce using rule 21 (expression -> expression SG expression .) ]


state 58

    (25) expression -> expression [ expression . ]
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

    ]               shift and go to state 64
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39


state 59

    (18) expression -> expression NEQ expression .
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for SG resolved as shift
  ! shift/reduce conflict for SL resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    ;               reduce using rule 18 (expression -> expression NEQ expression .)
    )               reduce using rule 18 (expression -> expression NEQ expression .)
    ]               reduce using rule 18 (expression -> expression NEQ expression .)
    {               reduce using rule 18 (expression -> expression NEQ expression .)
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39

  ! +               [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! -               [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! *               [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! /               [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! IN              [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! GEQ             [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! LEQ             [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! SG              [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! SL              [ reduce using rule 18 (expression -> expression NEQ expression .) ]
  ! [               [ reduce using rule 18 (expression -> expression NEQ expression .) ]


state 60

    (4) statementblock -> WHILE ( expression ) . { statementblock }

    {               shift and go to state 65


state 61

    (8) statementblock -> FOR NAME IN expression . { statementblock }
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

    {               shift and go to state 66
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39


state 62

    (7) statementblock -> FOR ( expression ; . expression ; expression ) { statementblock }
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 67

state 63

    (5) statementblock -> IF ( expression ) . { statementblock }
    (6) statementblock -> IF ( expression ) . { statementblock } ELSE { statementblock }

    {               shift and go to state 68


state 64

    (25) expression -> expression [ expression ] .

    +               reduce using rule 25 (expression -> expression [ expression ] .)
    -               reduce using rule 25 (expression -> expression [ expression ] .)
    *               reduce using rule 25 (expression -> expression [ expression ] .)
    /               reduce using rule 25 (expression -> expression [ expression ] .)
    IN              reduce using rule 25 (expression -> expression [ expression ] .)
    EQ              reduce using rule 25 (expression -> expression [ expression ] .)
    NEQ             reduce using rule 25 (expression -> expression [ expression ] .)
    GEQ             reduce using rule 25 (expression -> expression [ expression ] .)
    LEQ             reduce using rule 25 (expression -> expression [ expression ] .)
    SG              reduce using rule 25 (expression -> expression [ expression ] .)
    SL              reduce using rule 25 (expression -> expression [ expression ] .)
    [               reduce using rule 25 (expression -> expression [ expression ] .)
    ;               reduce using rule 25 (expression -> expression [ expression ] .)
    )               reduce using rule 25 (expression -> expression [ expression ] .)
    ]               reduce using rule 25 (expression -> expression [ expression ] .)
    {               reduce using rule 25 (expression -> expression [ expression ] .)


state 65

    (4) statementblock -> WHILE ( expression ) { . statementblock }
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 69
    expression                     shift and go to state 17
    statement                      shift and go to state 7

state 66

    (8) statementblock -> FOR NAME IN expression { . statementblock }
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 70
    expression                     shift and go to state 17
    statement                      shift and go to state 7

state 67

    (7) statementblock -> FOR ( expression ; expression . ; expression ) { statementblock }
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

    ;               shift and go to state 71
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39


state 68

    (5) statementblock -> IF ( expression ) { . statementblock }
    (6) statementblock -> IF ( expression ) { . statementblock } ELSE { statementblock }
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 72
    expression                     shift and go to state 17
    statement                      shift and go to state 7

state 69

    (4) statementblock -> WHILE ( expression ) { statementblock . }

    }               shift and go to state 73


state 70

    (8) statementblock -> FOR NAME IN expression { statementblock . }

    }               shift and go to state 74


state 71

    (7) statementblock -> FOR ( expression ; expression ; . expression ) { statementblock }
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    expression                     shift and go to state 75

state 72

    (5) statementblock -> IF ( expression ) { statementblock . }
    (6) statementblock -> IF ( expression ) { statementblock . } ELSE { statementblock }

    }               shift and go to state 76


state 73

    (4) statementblock -> WHILE ( expression ) { statementblock } .

    }               reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    {               reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    WHILE           reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    IF              reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    FOR             reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    FILTERON        reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    -               reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    (               reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    BOOL            reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    NUMBER          reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    STRING          reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    OBSERVATION     reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    NAME            reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    TEST            reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)
    $end            reduce using rule 4 (statementblock -> WHILE ( expression ) { statementblock } .)


state 74

    (8) statementblock -> FOR NAME IN expression { statementblock } .

    }               reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    {               reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    WHILE           reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    IF              reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    FOR             reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    FILTERON        reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    -               reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    (               reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    BOOL            reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    NUMBER          reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    STRING          reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    OBSERVATION     reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    NAME            reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    TEST            reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)
    $end            reduce using rule 8 (statementblock -> FOR NAME IN expression { statementblock } .)


state 75

    (7) statementblock -> FOR ( expression ; expression ; expression . ) { statementblock }
    (12) expression -> expression . + expression
    (13) expression -> expression . - expression
    (14) expression -> expression . * expression
    (15) expression -> expression . / expression
    (16) expression -> expression . IN expression
    (17) expression -> expression . EQ expression
    (18) expression -> expression . NEQ expression
    (19) expression -> expression . GEQ expression
    (20) expression -> expression . LEQ expression
    (21) expression -> expression . SG expression
    (22) expression -> expression . SL expression
    (25) expression -> expression . [ expression ]

    )               shift and go to state 77
    +               shift and go to state 32
    -               shift and go to state 34
    *               shift and go to state 33
    /               shift and go to state 35
    IN              shift and go to state 37
    EQ              shift and go to state 31
    NEQ             shift and go to state 40
    GEQ             shift and go to state 29
    LEQ             shift and go to state 36
    SG              shift and go to state 38
    SL              shift and go to state 30
    [               shift and go to state 39


state 76

    (5) statementblock -> IF ( expression ) { statementblock } .
    (6) statementblock -> IF ( expression ) { statementblock } . ELSE { statementblock }

    }               reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    {               reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    WHILE           reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    IF              reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    FOR             reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    FILTERON        reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    -               reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    (               reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    BOOL            reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    NUMBER          reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    STRING          reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    OBSERVATION     reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    NAME            reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    TEST            reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    $end            reduce using rule 5 (statementblock -> IF ( expression ) { statementblock } .)
    ELSE            shift and go to state 78


state 77

    (7) statementblock -> FOR ( expression ; expression ; expression ) . { statementblock }

    {               shift and go to state 79


state 78

    (6) statementblock -> IF ( expression ) { statementblock } ELSE . { statementblock }

    {               shift and go to state 80


state 79

    (7) statementblock -> FOR ( expression ; expression ; expression ) { . statementblock }
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 81
    expression                     shift and go to state 17
    statement                      shift and go to state 7

state 80

    (6) statementblock -> IF ( expression ) { statementblock } ELSE { . statementblock }
    (3) statementblock -> . { statementlist }
    (4) statementblock -> . WHILE ( expression ) { statementblock }
    (5) statementblock -> . IF ( expression ) { statementblock }
    (6) statementblock -> . IF ( expression ) { statementblock } ELSE { statementblock }
    (7) statementblock -> . FOR ( expression ; expression ; expression ) { statementblock }
    (8) statementblock -> . FOR NAME IN expression { statementblock }
    (9) statementblock -> . statement ;
    (10) statement -> . FILTERON expression
    (11) statement -> . expression
    (12) expression -> . expression + expression
    (13) expression -> . expression - expression
    (14) expression -> . expression * expression
    (15) expression -> . expression / expression
    (16) expression -> . expression IN expression
    (17) expression -> . expression EQ expression
    (18) expression -> . expression NEQ expression
    (19) expression -> . expression GEQ expression
    (20) expression -> . expression LEQ expression
    (21) expression -> . expression SG expression
    (22) expression -> . expression SL expression
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . expression [ expression ]
    (26) expression -> . BOOL
    (27) expression -> . NUMBER
    (28) expression -> . STRING
    (29) expression -> . OBSERVATION
    (30) expression -> . NAME ASSIGN expression
    (31) expression -> . NAME
    (32) expression -> . TEST

    {               shift and go to state 16
    WHILE           shift and go to state 4
    IF              shift and go to state 10
    FOR             shift and go to state 9
    FILTERON        shift and go to state 1
    -               shift and go to state 6
    (               shift and go to state 5
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 2
    STRING          shift and go to state 8
    OBSERVATION     shift and go to state 13
    NAME            shift and go to state 12
    TEST            shift and go to state 15

    statementblock                 shift and go to state 82
    expression                     shift and go to state 17
    statement                      shift and go to state 7

state 81

    (7) statementblock -> FOR ( expression ; expression ; expression ) { statementblock . }

    }               shift and go to state 83


state 82

    (6) statementblock -> IF ( expression ) { statementblock } ELSE { statementblock . }

    }               shift and go to state 84


state 83

    (7) statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .

    }               reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    {               reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    WHILE           reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    IF              reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    FOR             reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    FILTERON        reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    -               reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    (               reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    BOOL            reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    NUMBER          reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    STRING          reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    OBSERVATION     reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    NAME            reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    TEST            reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)
    $end            reduce using rule 7 (statementblock -> FOR ( expression ; expression ; expression ) { statementblock } .)


state 84

    (6) statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .

    }               reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    {               reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    WHILE           reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    IF              reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    FOR             reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    FILTERON        reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    -               reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    (               reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    BOOL            reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    NUMBER          reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    STRING          reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    OBSERVATION     reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    NAME            reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    TEST            reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)
    $end            reduce using rule 6 (statementblock -> IF ( expression ) { statementblock } ELSE { statementblock } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 46 resolved as shift
WARNING: shift/reduce conflict for - in state 46 resolved as shift
WARNING: shift/reduce conflict for * in state 46 resolved as shift
WARNING: shift/reduce conflict for / in state 46 resolved as shift
WARNING: shift/reduce conflict for IN in state 46 resolved as shift
WARNING: shift/reduce conflict for EQ in state 46 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 46 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 46 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 46 resolved as shift
WARNING: shift/reduce conflict for SG in state 46 resolved as shift
WARNING: shift/reduce conflict for SL in state 46 resolved as shift
WARNING: shift/reduce conflict for [ in state 46 resolved as shift
WARNING: shift/reduce conflict for + in state 48 resolved as shift
WARNING: shift/reduce conflict for - in state 48 resolved as shift
WARNING: shift/reduce conflict for * in state 48 resolved as shift
WARNING: shift/reduce conflict for / in state 48 resolved as shift
WARNING: shift/reduce conflict for IN in state 48 resolved as shift
WARNING: shift/reduce conflict for EQ in state 48 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 48 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 48 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 48 resolved as shift
WARNING: shift/reduce conflict for SG in state 48 resolved as shift
WARNING: shift/reduce conflict for SL in state 48 resolved as shift
WARNING: shift/reduce conflict for [ in state 48 resolved as shift
WARNING: shift/reduce conflict for + in state 49 resolved as shift
WARNING: shift/reduce conflict for - in state 49 resolved as shift
WARNING: shift/reduce conflict for * in state 49 resolved as shift
WARNING: shift/reduce conflict for / in state 49 resolved as shift
WARNING: shift/reduce conflict for IN in state 49 resolved as shift
WARNING: shift/reduce conflict for EQ in state 49 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 49 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 49 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 49 resolved as shift
WARNING: shift/reduce conflict for SG in state 49 resolved as shift
WARNING: shift/reduce conflict for SL in state 49 resolved as shift
WARNING: shift/reduce conflict for [ in state 49 resolved as shift
WARNING: shift/reduce conflict for + in state 50 resolved as shift
WARNING: shift/reduce conflict for - in state 50 resolved as shift
WARNING: shift/reduce conflict for * in state 50 resolved as shift
WARNING: shift/reduce conflict for / in state 50 resolved as shift
WARNING: shift/reduce conflict for IN in state 50 resolved as shift
WARNING: shift/reduce conflict for EQ in state 50 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 50 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 50 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 50 resolved as shift
WARNING: shift/reduce conflict for SG in state 50 resolved as shift
WARNING: shift/reduce conflict for SL in state 50 resolved as shift
WARNING: shift/reduce conflict for [ in state 50 resolved as shift
WARNING: shift/reduce conflict for + in state 55 resolved as shift
WARNING: shift/reduce conflict for - in state 55 resolved as shift
WARNING: shift/reduce conflict for * in state 55 resolved as shift
WARNING: shift/reduce conflict for / in state 55 resolved as shift
WARNING: shift/reduce conflict for IN in state 55 resolved as shift
WARNING: shift/reduce conflict for EQ in state 55 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 55 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 55 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 55 resolved as shift
WARNING: shift/reduce conflict for SG in state 55 resolved as shift
WARNING: shift/reduce conflict for SL in state 55 resolved as shift
WARNING: shift/reduce conflict for [ in state 55 resolved as shift
WARNING: shift/reduce conflict for + in state 56 resolved as shift
WARNING: shift/reduce conflict for - in state 56 resolved as shift
WARNING: shift/reduce conflict for * in state 56 resolved as shift
WARNING: shift/reduce conflict for / in state 56 resolved as shift
WARNING: shift/reduce conflict for IN in state 56 resolved as shift
WARNING: shift/reduce conflict for EQ in state 56 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 56 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 56 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 56 resolved as shift
WARNING: shift/reduce conflict for SG in state 56 resolved as shift
WARNING: shift/reduce conflict for SL in state 56 resolved as shift
WARNING: shift/reduce conflict for [ in state 56 resolved as shift
WARNING: shift/reduce conflict for + in state 57 resolved as shift
WARNING: shift/reduce conflict for - in state 57 resolved as shift
WARNING: shift/reduce conflict for * in state 57 resolved as shift
WARNING: shift/reduce conflict for / in state 57 resolved as shift
WARNING: shift/reduce conflict for IN in state 57 resolved as shift
WARNING: shift/reduce conflict for EQ in state 57 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 57 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 57 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 57 resolved as shift
WARNING: shift/reduce conflict for SG in state 57 resolved as shift
WARNING: shift/reduce conflict for SL in state 57 resolved as shift
WARNING: shift/reduce conflict for [ in state 57 resolved as shift
WARNING: shift/reduce conflict for + in state 59 resolved as shift
WARNING: shift/reduce conflict for - in state 59 resolved as shift
WARNING: shift/reduce conflict for * in state 59 resolved as shift
WARNING: shift/reduce conflict for / in state 59 resolved as shift
WARNING: shift/reduce conflict for IN in state 59 resolved as shift
WARNING: shift/reduce conflict for EQ in state 59 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 59 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 59 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 59 resolved as shift
WARNING: shift/reduce conflict for SG in state 59 resolved as shift
WARNING: shift/reduce conflict for SL in state 59 resolved as shift
WARNING: shift/reduce conflict for [ in state 59 resolved as shift

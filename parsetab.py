
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftPLUSMINUSleftMULTIPLYDIVIDErightUMINUSNAME NUMBER STRING ASSIGN EQ NEQ GEQ LEQ SG SL BOOL POWER MULTIPLY PLUS MINUS DIVIDE PLUSEQ MINEQ MULEQ DIVEQ FILTERON WHILE OBSERVATION FOR IN TEST ELSE IFstatementlist : statementlist statementblock\n                     | statementblock statementblock : '{' statementlist '}'\n                      | WHILE '(' expression ')' '{' statementblock '}'\n                      | IF '(' expression ')' '{' statementblock '}'\n                      | IF '(' expression ')' '{' statementblock '}' ELSE '{' statementblock '}'\n                      | FOR '(' expression ';' expression ';' expression ')' '{' statementblock '}'\n                      | FOR NAME IN expression '{' statementblock '}' \n                      | statement ';' statement : FILTERON expressionstatement : expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULTIPLY expression\n                  | expression DIVIDE expression\n                  | expression IN expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression GEQ expression\n                  | expression LEQ expression\n                  | expression SG expression\n                  | expression SL expression\n                  | expression POWER expressionexpression : MINUS expression %prec UMINUSexpression : '(' expression ')'expression : expression '[' expression ']'expression : BOOLexpression : NUMBERexpression : STRINGexpression : OBSERVATIONexpression : NAME '(' expression ')'expression : NAME ASSIGN expressionexpression : NAME PLUSEQ expression\n                  | NAME MINEQ expression\n                  | NAME MULEQ expression\n                  | NAME DIVEQ expressionexpression : NAMEexpression : TEST"
    
_lr_action_items = {'FILTERON':([0,3,11,16,19,23,33,58,78,79,81,86,87,89,92,93,96,97,],[1,1,-2,1,-1,-9,1,-3,1,1,1,-4,-8,-5,1,1,-7,-6,]),'NUMBER':([0,1,3,6,7,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,58,74,78,79,81,84,86,87,89,92,93,96,97,],[2,2,2,2,2,-2,2,-1,2,-9,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-3,2,2,2,2,2,-4,-8,-5,2,2,-7,-6,]),'WHILE':([0,3,11,16,19,23,33,58,78,79,81,86,87,89,92,93,96,97,],[4,4,-2,4,-1,-9,4,-3,4,4,4,-4,-8,-5,4,4,-7,-6,]),'MULTIPLY':([2,5,12,13,14,15,17,18,21,22,47,48,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,77,80,88,],[-28,-29,-37,-30,-27,-38,42,42,-24,42,42,-25,42,42,42,42,42,42,42,42,42,-15,42,42,42,42,42,42,-14,42,42,42,42,42,-31,-26,42,42,]),'MINUS':([0,1,2,3,5,6,7,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,76,77,78,79,80,81,84,86,87,88,89,92,93,96,97,],[6,6,-28,6,-29,6,6,-2,-37,-30,-27,-38,6,45,45,-1,6,-24,45,-9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,45,-25,6,45,45,45,45,45,45,45,45,-3,45,-15,45,45,45,45,-12,45,-14,45,45,-13,45,45,6,-31,-26,6,6,45,6,6,-4,-8,45,-5,6,6,-7,-6,]),'DIVIDE':([2,5,12,13,14,15,17,18,21,22,47,48,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,77,80,88,],[-28,-29,-37,-30,-27,-38,35,35,-24,35,35,-25,35,35,35,35,35,35,35,35,35,-15,35,35,35,35,35,35,-14,35,35,35,35,35,-31,-26,35,35,]),'GEQ':([2,5,12,13,14,15,17,18,21,22,47,48,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,77,80,88,],[-28,-29,-37,-30,-27,-38,34,34,-24,34,34,-25,34,34,34,34,34,34,34,34,34,-15,34,34,34,34,-12,34,-14,34,34,-13,34,34,-31,-26,34,34,]),'POWER':([2,5,12,13,14,15,17,18,21,22,47,48,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,77,80,88,],[-28,-29,-37,-30,-27,-38,36,36,-24,36,36,-25,36,36,36,36,36,36,36,36,36,-15,36,36,36,36,-12,36,-14,36,36,-13,36,36,-31,-26,36,36,]),')':([2,5,12,13,14,15,21,22,47,48,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,70,71,76,77,88,],[-28,-29,-37,-30,-27,-38,-24,48,72,-25,75,76,-34,-33,-35,-32,-36,-19,-15,-23,-17,-22,-20,-12,-16,-14,-21,-13,-18,-31,-26,90,]),'(':([0,1,3,4,6,7,9,10,11,12,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,58,74,78,79,81,84,86,87,89,92,93,96,97,],[7,7,7,20,7,7,25,26,-2,27,7,-1,7,-9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-3,7,7,7,7,7,-4,-8,-5,7,7,-7,-6,]),'PLUS':([2,5,12,13,14,15,17,18,21,22,47,48,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,77,80,88,],[-28,-29,-37,-30,-27,-38,40,40,-24,40,40,-25,40,40,40,40,40,40,40,40,40,-15,40,40,40,40,-12,40,-14,40,40,-13,40,40,-31,-26,40,40,]),'MULEQ':([12,],[30,]),';':([2,5,8,12,13,14,15,17,18,21,48,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,70,71,76,77,80,],[-28,-29,23,-37,-30,-27,-38,-11,-10,-24,-25,74,-34,-33,-35,-32,-36,-19,-15,-23,-17,-22,-20,-12,-16,-14,-21,-13,-18,-31,-26,84,]),'NEQ':([2,5,12,13,14,15,17,18,21,22,47,48,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,77,80,88,],[-28,-29,-37,-30,-27,-38,46,46,-24,46,46,-25,46,46,46,46,46,46,46,46,46,-15,46,46,46,46,-12,46,-14,46,46,-13,46,46,-31,-26,46,46,]),'ASSIGN':([12,],[31,]),'DIVEQ':([12,],[32,]),'$end':([3,11,19,23,58,86,87,89,96,97,],[0,-2,-1,-9,-3,-4,-8,-5,-7,-6,]),'STRING':([0,1,3,6,7,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,58,74,78,79,81,84,86,87,89,92,93,96,97,],[5,5,5,5,5,-2,5,-1,5,-9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-3,5,5,5,5,5,-4,-8,-5,5,5,-7,-6,]),'FOR':([0,3,11,16,19,23,33,58,78,79,81,86,87,89,92,93,96,97,],[9,9,-2,9,-1,-9,9,-3,9,9,9,-4,-8,-5,9,9,-7,-6,]),'MINEQ':([12,],[28,]),'IN':([2,5,12,13,14,15,17,18,21,22,24,47,48,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,77,80,88,],[-28,-29,-37,-30,-27,-38,41,41,-24,41,49,41,-25,41,41,41,41,41,41,41,41,41,-15,41,41,41,41,-12,41,-14,41,41,-13,41,41,-31,-26,41,41,]),'[':([2,5,12,13,14,15,17,18,21,22,47,48,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,77,80,88,],[-28,-29,-37,-30,-27,-38,44,44,-24,44,44,-25,44,44,44,44,44,44,44,44,44,-15,44,44,44,44,-12,44,-14,44,44,-13,44,44,-31,-26,44,44,]),'ELSE':([89,],[91,]),']':([2,5,12,13,14,15,21,48,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,],[-28,-29,-37,-30,-27,-38,-24,-25,-34,-33,-35,-32,-36,-19,-15,-23,-17,-22,-20,-12,-16,-14,-21,77,-13,-18,-31,-26,]),'IF':([0,3,11,16,19,23,33,58,78,79,81,86,87,89,92,93,96,97,],[10,10,-2,10,-1,-9,10,-3,10,10,10,-4,-8,-5,10,10,-7,-6,]),'EQ':([2,5,12,13,14,15,17,18,21,22,47,48,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,77,80,88,],[-28,-29,-37,-30,-27,-38,37,37,-24,37,37,-25,37,37,37,37,37,37,37,37,37,-15,37,37,37,37,-12,37,-14,37,37,-13,37,37,-31,-26,37,37,]),'NAME':([0,1,3,6,7,9,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,58,74,78,79,81,84,86,87,89,92,93,96,97,],[12,12,12,12,12,24,-2,12,-1,12,-9,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-3,12,12,12,12,12,-4,-8,-5,12,12,-7,-6,]),'PLUSEQ':([12,],[29,]),'}':([11,19,23,33,58,82,83,85,86,87,89,94,95,96,97,],[-2,-1,-9,58,-3,86,87,89,-4,-8,-5,96,97,-7,-6,]),'LEQ':([2,5,12,13,14,15,17,18,21,22,47,48,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,77,80,88,],[-28,-29,-37,-30,-27,-38,39,39,-24,39,39,-25,39,39,39,39,39,39,39,39,39,-15,39,39,39,39,-12,39,-14,39,39,-13,39,39,-31,-26,39,39,]),'OBSERVATION':([0,1,3,6,7,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,58,74,78,79,81,84,86,87,89,92,93,96,97,],[13,13,13,13,13,-2,13,-1,13,-9,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-3,13,13,13,13,13,-4,-8,-5,13,13,-7,-6,]),'BOOL':([0,1,3,6,7,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,58,74,78,79,81,84,86,87,89,92,93,96,97,],[14,14,14,14,14,-2,14,-1,14,-9,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-3,14,14,14,14,14,-4,-8,-5,14,14,-7,-6,]),'SL':([2,5,12,13,14,15,17,18,21,22,47,48,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,77,80,88,],[-28,-29,-37,-30,-27,-38,38,38,-24,38,38,-25,38,38,38,38,38,38,38,38,38,-15,38,38,38,38,-12,38,-14,38,38,-13,38,38,-31,-26,38,38,]),'TEST':([0,1,3,6,7,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,58,74,78,79,81,84,86,87,89,92,93,96,97,],[15,15,15,15,15,-2,15,-1,15,-9,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-3,15,15,15,15,15,-4,-8,-5,15,15,-7,-6,]),'{':([0,2,3,5,11,12,13,14,15,16,19,21,23,33,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,75,76,77,78,79,81,86,87,89,90,91,92,93,96,97,],[16,-28,16,-29,-2,-37,-30,-27,-38,16,-1,-24,-9,16,-25,-34,-33,-35,-32,-36,-3,-19,-15,-23,-17,-22,-20,-12,-16,-14,-21,-13,-18,78,79,81,-31,-26,16,16,16,-4,-8,-5,92,93,16,16,-7,-6,]),'SG':([2,5,12,13,14,15,17,18,21,22,47,48,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,77,80,88,],[-28,-29,-37,-30,-27,-38,43,43,-24,43,43,-25,43,43,43,43,43,43,43,43,43,-15,43,43,43,43,-12,43,-14,43,43,-13,43,43,-31,-26,43,43,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statementblock':([0,3,16,33,78,79,81,92,93,],[11,19,11,19,82,83,85,94,95,]),'expression':([0,1,3,6,7,16,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,74,78,79,81,84,92,93,],[17,18,17,21,22,17,47,50,51,52,53,54,55,56,57,17,59,60,61,62,63,64,65,66,67,68,69,70,71,73,80,17,17,17,88,17,17,]),'statement':([0,3,16,33,78,79,81,92,93,],[8,8,8,8,8,8,8,8,8,]),'statementlist':([0,16,],[3,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statementlist","S'",1,None,None,None),
  ('statementlist -> statementlist statementblock','statementlist',2,'p_statementlist_statementblock','filterparse.py',13),
  ('statementlist -> statementblock','statementlist',1,'p_statementlist_statementblock','filterparse.py',14),
  ('statementblock -> { statementlist }','statementblock',3,'p_statementblock_statement','filterparse.py',21),
  ('statementblock -> WHILE ( expression ) { statementblock }','statementblock',7,'p_statementblock_statement','filterparse.py',22),
  ('statementblock -> IF ( expression ) { statementblock }','statementblock',7,'p_statementblock_statement','filterparse.py',23),
  ('statementblock -> IF ( expression ) { statementblock } ELSE { statementblock }','statementblock',11,'p_statementblock_statement','filterparse.py',24),
  ('statementblock -> FOR ( expression ; expression ; expression ) { statementblock }','statementblock',11,'p_statementblock_statement','filterparse.py',25),
  ('statementblock -> FOR NAME IN expression { statementblock }','statementblock',7,'p_statementblock_statement','filterparse.py',26),
  ('statementblock -> statement ;','statementblock',2,'p_statementblock_statement','filterparse.py',27),
  ('statement -> FILTERON expression','statement',2,'p_statement_filteron','filterparse.py',47),
  ('statement -> expression','statement',1,'p_statement_expr','filterparse.py',51),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','filterparse.py',55),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','filterparse.py',56),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','filterparse.py',57),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','filterparse.py',58),
  ('expression -> expression IN expression','expression',3,'p_expression_binop','filterparse.py',59),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','filterparse.py',60),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binop','filterparse.py',61),
  ('expression -> expression GEQ expression','expression',3,'p_expression_binop','filterparse.py',62),
  ('expression -> expression LEQ expression','expression',3,'p_expression_binop','filterparse.py',63),
  ('expression -> expression SG expression','expression',3,'p_expression_binop','filterparse.py',64),
  ('expression -> expression SL expression','expression',3,'p_expression_binop','filterparse.py',65),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','filterparse.py',66),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','filterparse.py',93),
  ('expression -> ( expression )','expression',3,'p_expression_group','filterparse.py',97),
  ('expression -> expression [ expression ]','expression',4,'p_expression_field','filterparse.py',101),
  ('expression -> BOOL','expression',1,'p_expression_bool','filterparse.py',105),
  ('expression -> NUMBER','expression',1,'p_expression_number','filterparse.py',109),
  ('expression -> STRING','expression',1,'p_expression_string','filterparse.py',113),
  ('expression -> OBSERVATION','expression',1,'p_expression_observation','filterparse.py',117),
  ('expression -> NAME ( expression )','expression',4,'p_expression_function','filterparse.py',121),
  ('expression -> NAME ASSIGN expression','expression',3,'p_expression_assign','filterparse.py',125),
  ('expression -> NAME PLUSEQ expression','expression',3,'p_expression_opassign','filterparse.py',129),
  ('expression -> NAME MINEQ expression','expression',3,'p_expression_opassign','filterparse.py',130),
  ('expression -> NAME MULEQ expression','expression',3,'p_expression_opassign','filterparse.py',131),
  ('expression -> NAME DIVEQ expression','expression',3,'p_expression_opassign','filterparse.py',132),
  ('expression -> NAME','expression',1,'p_expression_name','filterparse.py',144),
  ('expression -> TEST','expression',1,'p_expression_test','filterparse.py',148),
]

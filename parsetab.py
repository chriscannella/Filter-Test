
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-leftMULTIPLY/rightUMINUSNAME NUMBER STRING ASSIGN EQ NEQ GEQ LEQ SG SL BOOL POWER MULTIPLY FILTERON WHILE OBSERVATION FOR IN TEST ELSE IFstatementlist : statementlist statementblock\n                     | statementblock statementblock : '{' statementlist '}'\n                      | WHILE '(' expression ')' '{' statementblock '}'\n                      | IF '(' expression ')' '{' statementblock '}'\n                      | IF '(' expression ')' '{' statementblock '}' ELSE '{' statementblock '}'\n                      | FOR '(' expression ';' expression ';' expression ')' '{' statementblock '}'\n                      | FOR NAME IN expression '{' statementblock '}' \n                      | statement ';' statement : FILTERON expressionstatement : expressionexpression : expression '+' expression\n                  | expression '-' expression\n                  | expression MULTIPLY expression\n                  | expression '/' expression\n                  | expression IN expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression GEQ expression\n                  | expression LEQ expression\n                  | expression SG expression\n                  | expression SL expression\n                  | expression POWER expressionexpression : '-' expression %prec UMINUSexpression : '(' expression ')'expression : expression '[' expression ']'expression : BOOLexpression : NUMBERexpression : STRINGexpression : OBSERVATIONexpression : NAME ASSIGN expressionexpression : NAMEexpression : TEST"
    
_lr_action_items = {'FILTERON':([0,3,11,16,19,23,28,48,67,68,70,75,76,78,81,82,85,86,],[1,1,-2,1,-1,-9,1,-3,1,1,1,-4,-8,-5,1,1,-7,-6,]),'NUMBER':([0,1,3,5,6,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,48,64,67,68,70,73,75,76,78,81,82,85,86,],[2,2,2,2,2,-2,2,-1,2,-9,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-3,2,2,2,2,2,-4,-8,-5,2,2,-7,-6,]),'WHILE':([0,3,11,16,19,23,28,48,67,68,70,75,76,78,81,82,85,86,],[4,4,-2,4,-1,-9,4,-3,4,4,4,-4,-8,-5,4,4,-7,-6,]),'MULTIPLY':([2,8,12,13,14,15,17,18,21,22,42,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,66,69,77,],[-28,-29,-32,-30,-27,-33,38,38,38,-24,38,-25,38,38,38,38,38,38,38,38,38,-15,38,38,-14,38,38,38,38,-26,38,38,]),'OBSERVATION':([0,1,3,5,6,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,48,64,67,68,70,73,75,76,78,81,82,85,86,],[13,13,13,13,13,-2,13,-1,13,-9,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-3,13,13,13,13,13,-4,-8,-5,13,13,-7,-6,]),'GEQ':([2,8,12,13,14,15,17,18,21,22,42,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,66,69,77,],[-28,-29,-32,-30,-27,-33,29,29,29,-24,29,-25,29,29,29,29,29,29,-12,29,-13,-15,29,29,-14,29,29,29,29,-26,29,29,]),'POWER':([2,8,12,13,14,15,17,18,21,22,42,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,66,69,77,],[-28,-29,-32,-30,-27,-33,30,30,30,-24,30,-25,30,30,30,30,30,30,-12,30,-13,-15,30,30,-14,30,30,30,30,-26,30,30,]),')':([2,8,12,13,14,15,21,22,42,43,46,47,49,50,51,52,53,54,55,56,57,58,59,61,66,77,],[-28,-29,-32,-30,-27,-33,43,-24,62,-25,65,-31,-19,-23,-17,-12,-22,-13,-15,-20,-16,-14,-21,-18,-26,79,]),'(':([0,1,3,4,5,6,9,10,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,48,64,67,68,70,73,75,76,78,81,82,85,86,],[5,5,5,20,5,5,25,26,-2,5,-1,5,-9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-3,5,5,5,5,5,-4,-8,-5,5,5,-7,-6,]),'+':([2,8,12,13,14,15,17,18,21,22,42,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,66,69,77,],[-28,-29,-32,-30,-27,-33,32,32,32,-24,32,-25,32,32,32,32,32,32,-12,32,-13,-15,32,32,-14,32,32,32,32,-26,32,32,]),'-':([0,1,2,3,5,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,66,67,68,69,70,73,75,76,77,78,81,82,85,86,],[6,6,-28,6,6,6,-29,-2,-32,-30,-27,-33,6,34,34,-1,6,34,-24,-9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,34,-25,6,34,34,34,-3,34,34,34,-12,34,-13,-15,34,34,-14,34,34,34,34,6,-26,6,6,34,6,6,-4,-8,34,-5,6,6,-7,-6,]),'/':([2,8,12,13,14,15,17,18,21,22,42,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,66,69,77,],[-28,-29,-32,-30,-27,-33,35,35,35,-24,35,-25,35,35,35,35,35,35,35,35,35,-15,35,35,-14,35,35,35,35,-26,35,35,]),';':([2,7,8,12,13,14,15,17,18,22,43,45,47,49,50,51,52,53,54,55,56,57,58,59,61,66,69,],[-28,23,-29,-32,-30,-27,-33,-11,-10,-24,-25,64,-31,-19,-23,-17,-12,-22,-13,-15,-20,-16,-14,-21,-18,-26,73,]),'NEQ':([2,8,12,13,14,15,17,18,21,22,42,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,66,69,77,],[-28,-29,-32,-30,-27,-33,41,41,41,-24,41,-25,41,41,41,41,41,41,-12,41,-13,-15,41,41,-14,41,41,41,41,-26,41,41,]),'ASSIGN':([12,],[27,]),'$end':([3,11,19,23,48,75,76,78,85,86,],[0,-2,-1,-9,-3,-4,-8,-5,-7,-6,]),'STRING':([0,1,3,5,6,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,48,64,67,68,70,73,75,76,78,81,82,85,86,],[8,8,8,8,8,-2,8,-1,8,-9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-3,8,8,8,8,8,-4,-8,-5,8,8,-7,-6,]),'FOR':([0,3,11,16,19,23,28,48,67,68,70,75,76,78,81,82,85,86,],[9,9,-2,9,-1,-9,9,-3,9,9,9,-4,-8,-5,9,9,-7,-6,]),'ELSE':([78,],[80,]),'IN':([2,8,12,13,14,15,17,18,21,22,24,42,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,66,69,77,],[-28,-29,-32,-30,-27,-33,37,37,37,-24,44,37,-25,37,37,37,37,37,37,-12,37,-13,-15,37,37,-14,37,37,37,37,-26,37,37,]),'[':([2,8,12,13,14,15,17,18,21,22,42,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,66,69,77,],[-28,-29,-32,-30,-27,-33,40,40,40,-24,40,-25,40,40,40,40,40,40,-12,40,-13,-15,40,40,-14,40,40,40,40,-26,40,40,]),']':([2,8,12,13,14,15,22,43,47,49,50,51,52,53,54,55,56,57,58,59,60,61,66,],[-28,-29,-32,-30,-27,-33,-24,-25,-31,-19,-23,-17,-12,-22,-13,-15,-20,-16,-14,-21,66,-18,-26,]),'IF':([0,3,11,16,19,23,28,48,67,68,70,75,76,78,81,82,85,86,],[10,10,-2,10,-1,-9,10,-3,10,10,10,-4,-8,-5,10,10,-7,-6,]),'EQ':([2,8,12,13,14,15,17,18,21,22,42,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,66,69,77,],[-28,-29,-32,-30,-27,-33,31,31,31,-24,31,-25,31,31,31,31,31,31,-12,31,-13,-15,31,31,-14,31,31,31,31,-26,31,31,]),'NAME':([0,1,3,5,6,9,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,48,64,67,68,70,73,75,76,78,81,82,85,86,],[12,12,12,12,12,24,-2,12,-1,12,-9,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-3,12,12,12,12,12,-4,-8,-5,12,12,-7,-6,]),'}':([11,19,23,28,48,71,72,74,75,76,78,83,84,85,86,],[-2,-1,-9,48,-3,75,76,78,-4,-8,-5,85,86,-7,-6,]),'LEQ':([2,8,12,13,14,15,17,18,21,22,42,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,66,69,77,],[-28,-29,-32,-30,-27,-33,36,36,36,-24,36,-25,36,36,36,36,36,36,-12,36,-13,-15,36,36,-14,36,36,36,36,-26,36,36,]),'BOOL':([0,1,3,5,6,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,48,64,67,68,70,73,75,76,78,81,82,85,86,],[14,14,14,14,14,-2,14,-1,14,-9,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-3,14,14,14,14,14,-4,-8,-5,14,14,-7,-6,]),'SL':([2,8,12,13,14,15,17,18,21,22,42,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,66,69,77,],[-28,-29,-32,-30,-27,-33,33,33,33,-24,33,-25,33,33,33,33,33,33,-12,33,-13,-15,33,33,-14,33,33,33,33,-26,33,33,]),'TEST':([0,1,3,5,6,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,48,64,67,68,70,73,75,76,78,81,82,85,86,],[15,15,15,15,15,-2,15,-1,15,-9,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-3,15,15,15,15,15,-4,-8,-5,15,15,-7,-6,]),'{':([0,2,3,8,11,12,13,14,15,16,19,22,23,28,43,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,65,66,67,68,70,75,76,78,79,80,81,82,85,86,],[16,-28,16,-29,-2,-32,-30,-27,-33,16,-1,-24,-9,16,-25,-31,-3,-19,-23,-17,-12,-22,-13,-15,-20,-16,-14,-21,-18,67,68,70,-26,16,16,16,-4,-8,-5,81,82,16,16,-7,-6,]),'SG':([2,8,12,13,14,15,17,18,21,22,42,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,66,69,77,],[-28,-29,-32,-30,-27,-33,39,39,39,-24,39,-25,39,39,39,39,39,39,-12,39,-13,-15,39,39,-14,39,39,39,39,-26,39,39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statementblock':([0,3,16,28,67,68,70,81,82,],[11,19,11,19,71,72,74,83,84,]),'expression':([0,1,3,5,6,16,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,64,67,68,70,73,81,82,],[17,18,17,21,22,17,42,45,46,47,17,49,50,51,52,53,54,55,56,57,58,59,60,61,63,69,17,17,17,77,17,17,]),'statement':([0,3,16,28,67,68,70,81,82,],[7,7,7,7,7,7,7,7,7,]),'statementlist':([0,16,],[3,28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statementlist","S'",1,None,None,None),
  ('statementlist -> statementlist statementblock','statementlist',2,'p_statementlist_statementblock','filterparse.py',13),
  ('statementlist -> statementblock','statementlist',1,'p_statementlist_statementblock','filterparse.py',14),
  ('statementblock -> { statementlist }','statementblock',3,'p_statementblock_statement','filterparse.py',21),
  ('statementblock -> WHILE ( expression ) { statementblock }','statementblock',7,'p_statementblock_statement','filterparse.py',22),
  ('statementblock -> IF ( expression ) { statementblock }','statementblock',7,'p_statementblock_statement','filterparse.py',23),
  ('statementblock -> IF ( expression ) { statementblock } ELSE { statementblock }','statementblock',11,'p_statementblock_statement','filterparse.py',24),
  ('statementblock -> FOR ( expression ; expression ; expression ) { statementblock }','statementblock',11,'p_statementblock_statement','filterparse.py',25),
  ('statementblock -> FOR NAME IN expression { statementblock }','statementblock',7,'p_statementblock_statement','filterparse.py',26),
  ('statementblock -> statement ;','statementblock',2,'p_statementblock_statement','filterparse.py',27),
  ('statement -> FILTERON expression','statement',2,'p_statement_filteron','filterparse.py',47),
  ('statement -> expression','statement',1,'p_statement_expr','filterparse.py',51),
  ('expression -> expression + expression','expression',3,'p_expression_binop','filterparse.py',55),
  ('expression -> expression - expression','expression',3,'p_expression_binop','filterparse.py',56),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','filterparse.py',57),
  ('expression -> expression / expression','expression',3,'p_expression_binop','filterparse.py',58),
  ('expression -> expression IN expression','expression',3,'p_expression_binop','filterparse.py',59),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','filterparse.py',60),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binop','filterparse.py',61),
  ('expression -> expression GEQ expression','expression',3,'p_expression_binop','filterparse.py',62),
  ('expression -> expression LEQ expression','expression',3,'p_expression_binop','filterparse.py',63),
  ('expression -> expression SG expression','expression',3,'p_expression_binop','filterparse.py',64),
  ('expression -> expression SL expression','expression',3,'p_expression_binop','filterparse.py',65),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','filterparse.py',66),
  ('expression -> - expression','expression',2,'p_expression_uminus','filterparse.py',93),
  ('expression -> ( expression )','expression',3,'p_expression_group','filterparse.py',97),
  ('expression -> expression [ expression ]','expression',4,'p_expression_field','filterparse.py',101),
  ('expression -> BOOL','expression',1,'p_expression_bool','filterparse.py',105),
  ('expression -> NUMBER','expression',1,'p_expression_number','filterparse.py',109),
  ('expression -> STRING','expression',1,'p_expression_string','filterparse.py',113),
  ('expression -> OBSERVATION','expression',1,'p_expression_observation','filterparse.py',117),
  ('expression -> NAME ASSIGN expression','expression',3,'p_expression_assign','filterparse.py',121),
  ('expression -> NAME','expression',1,'p_expression_name','filterparse.py',126),
  ('expression -> TEST','expression',1,'p_expression_test','filterparse.py',130),
]

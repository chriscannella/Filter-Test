
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-left*/rightUMINUSNAME NUMBER STRING ASSIGN EQ NEQ GEQ LEQ SG SL BOOL FILTERON WHILE OBSERVATION FOR IN TEST ELSE IFstatementlist : statementlist statementblock\n                     | statementblock statementblock : '{' statementlist '}'\n                      | WHILE '(' expression ')' '{' statementblock '}'\n                      | IF '(' expression ')' '{' statementblock '}'\n                      | IF '(' expression ')' '{' statementblock '}' ELSE '{' statementblock '}'\n                      | FOR '(' expression ';' expression ';' expression ')' '{' statementblock '}'\n                      | FOR NAME IN expression '{' statementblock '}' \n                      | statement ';' statement : FILTERON expressionstatement : expressionexpression : expression '+' expression\n                  | expression '-' expression\n                  | expression '*' expression\n                  | expression '/' expression\n                  | expression IN expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression GEQ expression\n                  | expression LEQ expression\n                  | expression SG expression\n                  | expression SL expressionexpression : '-' expression %prec UMINUSexpression : '(' expression ')'expression : expression '[' expression ']'expression : BOOLexpression : NUMBERexpression : STRINGexpression : OBSERVATIONexpression : NAME ASSIGN expressionexpression : NAMEexpression : TEST"
    
_lr_action_items = {'FILTERON':([0,3,11,16,19,23,28,47,65,66,68,73,74,76,79,80,83,84,],[1,1,-2,1,-1,-9,1,-3,1,1,1,-4,-8,-5,1,1,-7,-6,]),'NUMBER':([0,1,3,5,6,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,47,62,65,66,68,71,73,74,76,79,80,83,84,],[2,2,2,2,2,-2,2,-1,2,-9,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-3,2,2,2,2,2,-4,-8,-5,2,2,-7,-6,]),'WHILE':([0,3,11,16,19,23,28,47,65,66,68,73,74,76,79,80,83,84,],[4,4,-2,4,-1,-9,4,-3,4,4,4,-4,-8,-5,4,4,-7,-6,]),'OBSERVATION':([0,1,3,5,6,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,47,62,65,66,68,71,73,74,76,79,80,83,84,],[13,13,13,13,13,-2,13,-1,13,-9,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-3,13,13,13,13,13,-4,-8,-5,13,13,-7,-6,]),'GEQ':([2,8,12,13,14,15,17,18,21,22,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,64,67,75,],[-27,-28,-31,-29,-26,-32,29,29,29,-23,29,-24,29,29,29,29,29,29,-12,-14,-13,-15,29,29,29,29,29,29,-25,29,29,]),')':([2,8,12,13,14,15,21,22,41,42,45,46,48,49,50,51,52,53,54,55,56,57,59,64,75,],[-27,-28,-31,-29,-26,-32,42,-23,60,-24,63,-30,-19,-22,-17,-12,-14,-13,-15,-20,-16,-21,-18,-25,77,]),'(':([0,1,3,4,5,6,9,10,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,47,62,65,66,68,71,73,74,76,79,80,83,84,],[5,5,5,20,5,5,25,26,-2,5,-1,5,-9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-3,5,5,5,5,5,-4,-8,-5,5,5,-7,-6,]),'+':([2,8,12,13,14,15,17,18,21,22,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,64,67,75,],[-27,-28,-31,-29,-26,-32,32,32,32,-23,32,-24,32,32,32,32,32,32,-12,-14,-13,-15,32,32,32,32,32,32,-25,32,32,]),'*':([2,8,12,13,14,15,17,18,21,22,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,64,67,75,],[-27,-28,-31,-29,-26,-32,33,33,33,-23,33,-24,33,33,33,33,33,33,33,-14,33,-15,33,33,33,33,33,33,-25,33,33,]),'-':([0,1,2,3,5,6,8,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,64,65,66,67,68,71,73,74,75,76,79,80,83,84,],[6,6,-27,6,6,6,-28,-2,-31,-29,-26,-32,6,34,34,-1,6,34,-23,-9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,34,-24,6,34,34,34,-3,34,34,34,-12,-14,-13,-15,34,34,34,34,34,34,6,-25,6,6,34,6,6,-4,-8,34,-5,6,6,-7,-6,]),'/':([2,8,12,13,14,15,17,18,21,22,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,64,67,75,],[-27,-28,-31,-29,-26,-32,35,35,35,-23,35,-24,35,35,35,35,35,35,35,-14,35,-15,35,35,35,35,35,35,-25,35,35,]),';':([2,7,8,12,13,14,15,17,18,22,42,44,46,48,49,50,51,52,53,54,55,56,57,59,64,67,],[-27,23,-28,-31,-29,-26,-32,-11,-10,-23,-24,62,-30,-19,-22,-17,-12,-14,-13,-15,-20,-16,-21,-18,-25,71,]),'NEQ':([2,8,12,13,14,15,17,18,21,22,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,64,67,75,],[-27,-28,-31,-29,-26,-32,40,40,40,-23,40,-24,40,40,40,40,40,40,-12,-14,-13,-15,40,40,40,40,40,40,-25,40,40,]),'ASSIGN':([12,],[27,]),'$end':([3,11,19,23,47,73,74,76,83,84,],[0,-2,-1,-9,-3,-4,-8,-5,-7,-6,]),'STRING':([0,1,3,5,6,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,47,62,65,66,68,71,73,74,76,79,80,83,84,],[8,8,8,8,8,-2,8,-1,8,-9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-3,8,8,8,8,8,-4,-8,-5,8,8,-7,-6,]),'FOR':([0,3,11,16,19,23,28,47,65,66,68,73,74,76,79,80,83,84,],[9,9,-2,9,-1,-9,9,-3,9,9,9,-4,-8,-5,9,9,-7,-6,]),'ELSE':([76,],[78,]),'IN':([2,8,12,13,14,15,17,18,21,22,24,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,64,67,75,],[-27,-28,-31,-29,-26,-32,37,37,37,-23,43,37,-24,37,37,37,37,37,37,-12,-14,-13,-15,37,37,37,37,37,37,-25,37,37,]),'[':([2,8,12,13,14,15,17,18,21,22,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,64,67,75,],[-27,-28,-31,-29,-26,-32,39,39,39,-23,39,-24,39,39,39,39,39,39,-12,-14,-13,-15,39,39,39,39,39,39,-25,39,39,]),']':([2,8,12,13,14,15,22,42,46,48,49,50,51,52,53,54,55,56,57,58,59,64,],[-27,-28,-31,-29,-26,-32,-23,-24,-30,-19,-22,-17,-12,-14,-13,-15,-20,-16,-21,64,-18,-25,]),'IF':([0,3,11,16,19,23,28,47,65,66,68,73,74,76,79,80,83,84,],[10,10,-2,10,-1,-9,10,-3,10,10,10,-4,-8,-5,10,10,-7,-6,]),'EQ':([2,8,12,13,14,15,17,18,21,22,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,64,67,75,],[-27,-28,-31,-29,-26,-32,31,31,31,-23,31,-24,31,31,31,31,31,31,-12,-14,-13,-15,31,31,31,31,31,31,-25,31,31,]),'NAME':([0,1,3,5,6,9,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,47,62,65,66,68,71,73,74,76,79,80,83,84,],[12,12,12,12,12,24,-2,12,-1,12,-9,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-3,12,12,12,12,12,-4,-8,-5,12,12,-7,-6,]),'}':([11,19,23,28,47,69,70,72,73,74,76,81,82,83,84,],[-2,-1,-9,47,-3,73,74,76,-4,-8,-5,83,84,-7,-6,]),'LEQ':([2,8,12,13,14,15,17,18,21,22,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,64,67,75,],[-27,-28,-31,-29,-26,-32,36,36,36,-23,36,-24,36,36,36,36,36,36,-12,-14,-13,-15,36,36,36,36,36,36,-25,36,36,]),'BOOL':([0,1,3,5,6,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,47,62,65,66,68,71,73,74,76,79,80,83,84,],[14,14,14,14,14,-2,14,-1,14,-9,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-3,14,14,14,14,14,-4,-8,-5,14,14,-7,-6,]),'SL':([2,8,12,13,14,15,17,18,21,22,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,64,67,75,],[-27,-28,-31,-29,-26,-32,30,30,30,-23,30,-24,30,30,30,30,30,30,-12,-14,-13,-15,30,30,30,30,30,30,-25,30,30,]),'TEST':([0,1,3,5,6,11,16,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,47,62,65,66,68,71,73,74,76,79,80,83,84,],[15,15,15,15,15,-2,15,-1,15,-9,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-3,15,15,15,15,15,-4,-8,-5,15,15,-7,-6,]),'{':([0,2,3,8,11,12,13,14,15,16,19,22,23,28,42,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,63,64,65,66,68,73,74,76,77,78,79,80,83,84,],[16,-27,16,-28,-2,-31,-29,-26,-32,16,-1,-23,-9,16,-24,-30,-3,-19,-22,-17,-12,-14,-13,-15,-20,-16,-21,-18,65,66,68,-25,16,16,16,-4,-8,-5,79,80,16,16,-7,-6,]),'SG':([2,8,12,13,14,15,17,18,21,22,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,64,67,75,],[-27,-28,-31,-29,-26,-32,38,38,38,-23,38,-24,38,38,38,38,38,38,-12,-14,-13,-15,38,38,38,38,38,38,-25,38,38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statementblock':([0,3,16,28,65,66,68,79,80,],[11,19,11,19,69,70,72,81,82,]),'expression':([0,1,3,5,6,16,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,62,65,66,68,71,79,80,],[17,18,17,21,22,17,41,44,45,46,17,48,49,50,51,52,53,54,55,56,57,58,59,61,67,17,17,17,75,17,17,]),'statement':([0,3,16,28,65,66,68,79,80,],[7,7,7,7,7,7,7,7,7,]),'statementlist':([0,16,],[3,28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statementlist","S'",1,None,None,None),
  ('statementlist -> statementlist statementblock','statementlist',2,'p_statementlist_statementblock','filterparse.py',13),
  ('statementlist -> statementblock','statementlist',1,'p_statementlist_statementblock','filterparse.py',14),
  ('statementblock -> { statementlist }','statementblock',3,'p_statementblock_statement','filterparse.py',21),
  ('statementblock -> WHILE ( expression ) { statementblock }','statementblock',7,'p_statementblock_statement','filterparse.py',22),
  ('statementblock -> IF ( expression ) { statementblock }','statementblock',7,'p_statementblock_statement','filterparse.py',23),
  ('statementblock -> IF ( expression ) { statementblock } ELSE { statementblock }','statementblock',11,'p_statementblock_statement','filterparse.py',24),
  ('statementblock -> FOR ( expression ; expression ; expression ) { statementblock }','statementblock',11,'p_statementblock_statement','filterparse.py',25),
  ('statementblock -> FOR NAME IN expression { statementblock }','statementblock',7,'p_statementblock_statement','filterparse.py',26),
  ('statementblock -> statement ;','statementblock',2,'p_statementblock_statement','filterparse.py',27),
  ('statement -> FILTERON expression','statement',2,'p_statement_filteron','filterparse.py',47),
  ('statement -> expression','statement',1,'p_statement_expr','filterparse.py',51),
  ('expression -> expression + expression','expression',3,'p_expression_binop','filterparse.py',55),
  ('expression -> expression - expression','expression',3,'p_expression_binop','filterparse.py',56),
  ('expression -> expression * expression','expression',3,'p_expression_binop','filterparse.py',57),
  ('expression -> expression / expression','expression',3,'p_expression_binop','filterparse.py',58),
  ('expression -> expression IN expression','expression',3,'p_expression_binop','filterparse.py',59),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','filterparse.py',60),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binop','filterparse.py',61),
  ('expression -> expression GEQ expression','expression',3,'p_expression_binop','filterparse.py',62),
  ('expression -> expression LEQ expression','expression',3,'p_expression_binop','filterparse.py',63),
  ('expression -> expression SG expression','expression',3,'p_expression_binop','filterparse.py',64),
  ('expression -> expression SL expression','expression',3,'p_expression_binop','filterparse.py',65),
  ('expression -> - expression','expression',2,'p_expression_uminus','filterparse.py',90),
  ('expression -> ( expression )','expression',3,'p_expression_group','filterparse.py',94),
  ('expression -> expression [ expression ]','expression',4,'p_expression_field','filterparse.py',98),
  ('expression -> BOOL','expression',1,'p_expression_bool','filterparse.py',102),
  ('expression -> NUMBER','expression',1,'p_expression_number','filterparse.py',106),
  ('expression -> STRING','expression',1,'p_expression_string','filterparse.py',110),
  ('expression -> OBSERVATION','expression',1,'p_expression_observation','filterparse.py',114),
  ('expression -> NAME ASSIGN expression','expression',3,'p_expression_assign','filterparse.py',118),
  ('expression -> NAME','expression',1,'p_expression_name','filterparse.py',123),
  ('expression -> TEST','expression',1,'p_expression_test','filterparse.py',127),
]
